Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNACION
    SEPARADOR
    SIMBOLO

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> statement SALTO sentencias
Rule 2     sentencias -> statement
Rule 3     statement -> VARTYPE declaration
Rule 4     statement -> VECTOR VARTYPE declaration
Rule 5     statement -> VARTYPE ID = expressionSR
Rule 6     statement -> ID = expressionSR
Rule 7     statement -> ID = boolean
Rule 8     statement -> expressionSR
Rule 9     statement -> boolean
Rule 10    statement -> <empty>
Rule 11    boolean -> expressionLOG
Rule 12    boolean -> expressionLOG BOOLEANO boolean
Rule 13    declaration -> vector
Rule 14    declaration -> vector , declaration
Rule 15    declaration -> identificador
Rule 16    declaration -> identificador , declaration
Rule 17    vector -> ID [ ENTERO ]
Rule 18    identificador -> ID
Rule 19    expressionLOG -> expressionSR LT expressionSR
Rule 20    expressionLOG -> expressionSR GT expressionSR
Rule 21    expressionLOG -> expressionSR LE expressionSR
Rule 22    expressionLOG -> expressionSR GE expressionSR
Rule 23    expressionLOG -> expressionSR EQ expressionSR
Rule 24    expressionSR -> expressionSR + expressionMD
Rule 25    expressionSR -> expressionSR - expressionMD
Rule 26    expressionSR -> expressionMD
Rule 27    expressionMD -> expressionMD * expression
Rule 28    expressionMD -> expressionMD / expression
Rule 29    expressionMD -> expression
Rule 30    expression -> ( expressionSR )
Rule 31    expression -> - expression
Rule 32    expression -> + expression
Rule 33    expression -> ENTERO
Rule 34    expression -> DECIMAL
Rule 35    expression -> V_BOOLEAN
Rule 36    expression -> NOTCIENT
Rule 37    expression -> OCTAL
Rule 38    expression -> FCIENT ( expressionSR )
Rule 39    expression -> ID

Terminals, with rules where they appear

(                    : 30 38
)                    : 30 38
*                    : 27
+                    : 24 32
,                    : 14 16
-                    : 25 31
/                    : 28
=                    : 5 6 7
ASIGNACION           : 
BOOLEANO             : 12
DECIMAL              : 34
ENTERO               : 17 33
EQ                   : 23
FCIENT               : 38
GE                   : 22
GT                   : 20
ID                   : 5 6 7 17 18 39
LE                   : 21
LT                   : 19
NOTCIENT             : 36
OCTAL                : 37
SALTO                : 1
SEPARADOR            : 
SIMBOLO              : 
VARTYPE              : 3 4 5
VECTOR               : 4
V_BOOLEAN            : 35
[                    : 17
]                    : 17
error                : 

Nonterminals, with rules where they appear

boolean              : 7 9 12
declaration          : 3 4 14 16
expression           : 27 28 29 31 32
expressionLOG        : 11 12
expressionMD         : 24 25 26 27 28
expressionSR         : 5 6 8 19 19 20 20 21 21 22 22 23 23 24 25 30 38
identificador        : 15 16
sentencias           : 1 0
statement            : 1 2
vector               : 13 14

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE declaration
    (4) statement -> . VECTOR VARTYPE declaration
    (5) statement -> . VARTYPE ID = expressionSR
    (6) statement -> . ID = expressionSR
    (7) statement -> . ID = boolean
    (8) statement -> . expressionSR
    (9) statement -> . boolean
    (10) statement -> .
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (11) boolean -> . expressionLOG
    (12) boolean -> . expressionLOG BOOLEANO boolean
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (19) expressionLOG -> . expressionSR LT expressionSR
    (20) expressionLOG -> . expressionSR GT expressionSR
    (21) expressionLOG -> . expressionSR LE expressionSR
    (22) expressionLOG -> . expressionSR GE expressionSR
    (23) expressionLOG -> . expressionSR EQ expressionSR
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    VARTYPE         shift and go to state 3
    VECTOR          shift and go to state 4
    ID              shift and go to state 5
    SALTO           reduce using rule 10 (statement -> .)
    $end            reduce using rule 10 (statement -> .)
    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19

    sentencias                     shift and go to state 1
    statement                      shift and go to state 2
    expressionSR                   shift and go to state 6
    boolean                        shift and go to state 7
    expressionMD                   shift and go to state 9
    expressionLOG                  shift and go to state 11
    expression                     shift and go to state 12

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> statement . SALTO sentencias
    (2) sentencias -> statement .

    SALTO           shift and go to state 20
    $end            reduce using rule 2 (sentencias -> statement .)


state 3

    (3) statement -> VARTYPE . declaration
    (5) statement -> VARTYPE . ID = expressionSR
    (13) declaration -> . vector
    (14) declaration -> . vector , declaration
    (15) declaration -> . identificador
    (16) declaration -> . identificador , declaration
    (17) vector -> . ID [ ENTERO ]
    (18) identificador -> . ID

    ID              shift and go to state 22

    declaration                    shift and go to state 21
    vector                         shift and go to state 23
    identificador                  shift and go to state 24

state 4

    (4) statement -> VECTOR . VARTYPE declaration

    VARTYPE         shift and go to state 25


state 5

    (6) statement -> ID . = expressionSR
    (7) statement -> ID . = boolean
    (39) expression -> ID .

    =               shift and go to state 26
    *               reduce using rule 39 (expression -> ID .)
    /               reduce using rule 39 (expression -> ID .)
    +               reduce using rule 39 (expression -> ID .)
    -               reduce using rule 39 (expression -> ID .)
    LT              reduce using rule 39 (expression -> ID .)
    GT              reduce using rule 39 (expression -> ID .)
    LE              reduce using rule 39 (expression -> ID .)
    GE              reduce using rule 39 (expression -> ID .)
    EQ              reduce using rule 39 (expression -> ID .)
    SALTO           reduce using rule 39 (expression -> ID .)
    $end            reduce using rule 39 (expression -> ID .)


state 6

    (8) statement -> expressionSR .
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD
    (19) expressionLOG -> expressionSR . LT expressionSR
    (20) expressionLOG -> expressionSR . GT expressionSR
    (21) expressionLOG -> expressionSR . LE expressionSR
    (22) expressionLOG -> expressionSR . GE expressionSR
    (23) expressionLOG -> expressionSR . EQ expressionSR

    SALTO           reduce using rule 8 (statement -> expressionSR .)
    $end            reduce using rule 8 (statement -> expressionSR .)
    +               shift and go to state 27
    -               shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    LE              shift and go to state 31
    GE              shift and go to state 32
    EQ              shift and go to state 33


state 7

    (9) statement -> boolean .

    SALTO           reduce using rule 9 (statement -> boolean .)
    $end            reduce using rule 9 (statement -> boolean .)


state 8

    (32) expression -> + . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expression                     shift and go to state 34

state 9

    (26) expressionSR -> expressionMD .
    (27) expressionMD -> expressionMD . * expression
    (28) expressionMD -> expressionMD . / expression

    +               reduce using rule 26 (expressionSR -> expressionMD .)
    -               reduce using rule 26 (expressionSR -> expressionMD .)
    LT              reduce using rule 26 (expressionSR -> expressionMD .)
    GT              reduce using rule 26 (expressionSR -> expressionMD .)
    LE              reduce using rule 26 (expressionSR -> expressionMD .)
    GE              reduce using rule 26 (expressionSR -> expressionMD .)
    EQ              reduce using rule 26 (expressionSR -> expressionMD .)
    SALTO           reduce using rule 26 (expressionSR -> expressionMD .)
    $end            reduce using rule 26 (expressionSR -> expressionMD .)
    )               reduce using rule 26 (expressionSR -> expressionMD .)
    BOOLEANO        reduce using rule 26 (expressionSR -> expressionMD .)
    *               shift and go to state 36
    /               shift and go to state 37


state 10

    (31) expression -> - . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expression                     shift and go to state 38

state 11

    (11) boolean -> expressionLOG .
    (12) boolean -> expressionLOG . BOOLEANO boolean

    SALTO           reduce using rule 11 (boolean -> expressionLOG .)
    $end            reduce using rule 11 (boolean -> expressionLOG .)
    BOOLEANO        shift and go to state 39


state 12

    (29) expressionMD -> expression .

    *               reduce using rule 29 (expressionMD -> expression .)
    /               reduce using rule 29 (expressionMD -> expression .)
    +               reduce using rule 29 (expressionMD -> expression .)
    -               reduce using rule 29 (expressionMD -> expression .)
    LT              reduce using rule 29 (expressionMD -> expression .)
    GT              reduce using rule 29 (expressionMD -> expression .)
    LE              reduce using rule 29 (expressionMD -> expression .)
    GE              reduce using rule 29 (expressionMD -> expression .)
    EQ              reduce using rule 29 (expressionMD -> expression .)
    SALTO           reduce using rule 29 (expressionMD -> expression .)
    $end            reduce using rule 29 (expressionMD -> expression .)
    )               reduce using rule 29 (expressionMD -> expression .)
    BOOLEANO        reduce using rule 29 (expressionMD -> expression .)


state 13

    (30) expression -> ( . expressionSR )
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 40
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 14

    (33) expression -> ENTERO .

    *               reduce using rule 33 (expression -> ENTERO .)
    /               reduce using rule 33 (expression -> ENTERO .)
    +               reduce using rule 33 (expression -> ENTERO .)
    -               reduce using rule 33 (expression -> ENTERO .)
    LT              reduce using rule 33 (expression -> ENTERO .)
    GT              reduce using rule 33 (expression -> ENTERO .)
    LE              reduce using rule 33 (expression -> ENTERO .)
    GE              reduce using rule 33 (expression -> ENTERO .)
    EQ              reduce using rule 33 (expression -> ENTERO .)
    SALTO           reduce using rule 33 (expression -> ENTERO .)
    $end            reduce using rule 33 (expression -> ENTERO .)
    )               reduce using rule 33 (expression -> ENTERO .)
    BOOLEANO        reduce using rule 33 (expression -> ENTERO .)


state 15

    (34) expression -> DECIMAL .

    *               reduce using rule 34 (expression -> DECIMAL .)
    /               reduce using rule 34 (expression -> DECIMAL .)
    +               reduce using rule 34 (expression -> DECIMAL .)
    -               reduce using rule 34 (expression -> DECIMAL .)
    LT              reduce using rule 34 (expression -> DECIMAL .)
    GT              reduce using rule 34 (expression -> DECIMAL .)
    LE              reduce using rule 34 (expression -> DECIMAL .)
    GE              reduce using rule 34 (expression -> DECIMAL .)
    EQ              reduce using rule 34 (expression -> DECIMAL .)
    SALTO           reduce using rule 34 (expression -> DECIMAL .)
    $end            reduce using rule 34 (expression -> DECIMAL .)
    )               reduce using rule 34 (expression -> DECIMAL .)
    BOOLEANO        reduce using rule 34 (expression -> DECIMAL .)


state 16

    (35) expression -> V_BOOLEAN .

    *               reduce using rule 35 (expression -> V_BOOLEAN .)
    /               reduce using rule 35 (expression -> V_BOOLEAN .)
    +               reduce using rule 35 (expression -> V_BOOLEAN .)
    -               reduce using rule 35 (expression -> V_BOOLEAN .)
    LT              reduce using rule 35 (expression -> V_BOOLEAN .)
    GT              reduce using rule 35 (expression -> V_BOOLEAN .)
    LE              reduce using rule 35 (expression -> V_BOOLEAN .)
    GE              reduce using rule 35 (expression -> V_BOOLEAN .)
    EQ              reduce using rule 35 (expression -> V_BOOLEAN .)
    SALTO           reduce using rule 35 (expression -> V_BOOLEAN .)
    $end            reduce using rule 35 (expression -> V_BOOLEAN .)
    )               reduce using rule 35 (expression -> V_BOOLEAN .)
    BOOLEANO        reduce using rule 35 (expression -> V_BOOLEAN .)


state 17

    (36) expression -> NOTCIENT .

    *               reduce using rule 36 (expression -> NOTCIENT .)
    /               reduce using rule 36 (expression -> NOTCIENT .)
    +               reduce using rule 36 (expression -> NOTCIENT .)
    -               reduce using rule 36 (expression -> NOTCIENT .)
    LT              reduce using rule 36 (expression -> NOTCIENT .)
    GT              reduce using rule 36 (expression -> NOTCIENT .)
    LE              reduce using rule 36 (expression -> NOTCIENT .)
    GE              reduce using rule 36 (expression -> NOTCIENT .)
    EQ              reduce using rule 36 (expression -> NOTCIENT .)
    SALTO           reduce using rule 36 (expression -> NOTCIENT .)
    $end            reduce using rule 36 (expression -> NOTCIENT .)
    )               reduce using rule 36 (expression -> NOTCIENT .)
    BOOLEANO        reduce using rule 36 (expression -> NOTCIENT .)


state 18

    (37) expression -> OCTAL .

    *               reduce using rule 37 (expression -> OCTAL .)
    /               reduce using rule 37 (expression -> OCTAL .)
    +               reduce using rule 37 (expression -> OCTAL .)
    -               reduce using rule 37 (expression -> OCTAL .)
    LT              reduce using rule 37 (expression -> OCTAL .)
    GT              reduce using rule 37 (expression -> OCTAL .)
    LE              reduce using rule 37 (expression -> OCTAL .)
    GE              reduce using rule 37 (expression -> OCTAL .)
    EQ              reduce using rule 37 (expression -> OCTAL .)
    SALTO           reduce using rule 37 (expression -> OCTAL .)
    $end            reduce using rule 37 (expression -> OCTAL .)
    )               reduce using rule 37 (expression -> OCTAL .)
    BOOLEANO        reduce using rule 37 (expression -> OCTAL .)


state 19

    (38) expression -> FCIENT . ( expressionSR )

    (               shift and go to state 41


state 20

    (1) sentencias -> statement SALTO . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE declaration
    (4) statement -> . VECTOR VARTYPE declaration
    (5) statement -> . VARTYPE ID = expressionSR
    (6) statement -> . ID = expressionSR
    (7) statement -> . ID = boolean
    (8) statement -> . expressionSR
    (9) statement -> . boolean
    (10) statement -> .
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (11) boolean -> . expressionLOG
    (12) boolean -> . expressionLOG BOOLEANO boolean
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (19) expressionLOG -> . expressionSR LT expressionSR
    (20) expressionLOG -> . expressionSR GT expressionSR
    (21) expressionLOG -> . expressionSR LE expressionSR
    (22) expressionLOG -> . expressionSR GE expressionSR
    (23) expressionLOG -> . expressionSR EQ expressionSR
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    VARTYPE         shift and go to state 3
    VECTOR          shift and go to state 4
    ID              shift and go to state 5
    SALTO           reduce using rule 10 (statement -> .)
    $end            reduce using rule 10 (statement -> .)
    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19

    statement                      shift and go to state 2
    sentencias                     shift and go to state 42
    expressionSR                   shift and go to state 6
    boolean                        shift and go to state 7
    expressionMD                   shift and go to state 9
    expressionLOG                  shift and go to state 11
    expression                     shift and go to state 12

state 21

    (3) statement -> VARTYPE declaration .

    SALTO           reduce using rule 3 (statement -> VARTYPE declaration .)
    $end            reduce using rule 3 (statement -> VARTYPE declaration .)


state 22

    (5) statement -> VARTYPE ID . = expressionSR
    (17) vector -> ID . [ ENTERO ]
    (18) identificador -> ID .

    =               shift and go to state 43
    [               shift and go to state 44
    ,               reduce using rule 18 (identificador -> ID .)
    SALTO           reduce using rule 18 (identificador -> ID .)
    $end            reduce using rule 18 (identificador -> ID .)


state 23

    (13) declaration -> vector .
    (14) declaration -> vector . , declaration

    SALTO           reduce using rule 13 (declaration -> vector .)
    $end            reduce using rule 13 (declaration -> vector .)
    ,               shift and go to state 45


state 24

    (15) declaration -> identificador .
    (16) declaration -> identificador . , declaration

    SALTO           reduce using rule 15 (declaration -> identificador .)
    $end            reduce using rule 15 (declaration -> identificador .)
    ,               shift and go to state 46


state 25

    (4) statement -> VECTOR VARTYPE . declaration
    (13) declaration -> . vector
    (14) declaration -> . vector , declaration
    (15) declaration -> . identificador
    (16) declaration -> . identificador , declaration
    (17) vector -> . ID [ ENTERO ]
    (18) identificador -> . ID

    ID              shift and go to state 48

    declaration                    shift and go to state 47
    vector                         shift and go to state 23
    identificador                  shift and go to state 24

state 26

    (6) statement -> ID = . expressionSR
    (7) statement -> ID = . boolean
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (11) boolean -> . expressionLOG
    (12) boolean -> . expressionLOG BOOLEANO boolean
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (19) expressionLOG -> . expressionSR LT expressionSR
    (20) expressionLOG -> . expressionSR GT expressionSR
    (21) expressionLOG -> . expressionSR LE expressionSR
    (22) expressionLOG -> . expressionSR GE expressionSR
    (23) expressionLOG -> . expressionSR EQ expressionSR
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 49
    boolean                        shift and go to state 50
    expressionMD                   shift and go to state 9
    expressionLOG                  shift and go to state 11
    expression                     shift and go to state 12

state 27

    (24) expressionSR -> expressionSR + . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionMD                   shift and go to state 51
    expression                     shift and go to state 12

state 28

    (25) expressionSR -> expressionSR - . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionMD                   shift and go to state 52
    expression                     shift and go to state 12

state 29

    (19) expressionLOG -> expressionSR LT . expressionSR
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 53
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 30

    (20) expressionLOG -> expressionSR GT . expressionSR
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 54
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 31

    (21) expressionLOG -> expressionSR LE . expressionSR
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 55
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 32

    (22) expressionLOG -> expressionSR GE . expressionSR
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 56
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 33

    (23) expressionLOG -> expressionSR EQ . expressionSR
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 57
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 34

    (32) expression -> + expression .

    *               reduce using rule 32 (expression -> + expression .)
    /               reduce using rule 32 (expression -> + expression .)
    +               reduce using rule 32 (expression -> + expression .)
    -               reduce using rule 32 (expression -> + expression .)
    LT              reduce using rule 32 (expression -> + expression .)
    GT              reduce using rule 32 (expression -> + expression .)
    LE              reduce using rule 32 (expression -> + expression .)
    GE              reduce using rule 32 (expression -> + expression .)
    EQ              reduce using rule 32 (expression -> + expression .)
    SALTO           reduce using rule 32 (expression -> + expression .)
    $end            reduce using rule 32 (expression -> + expression .)
    )               reduce using rule 32 (expression -> + expression .)
    BOOLEANO        reduce using rule 32 (expression -> + expression .)


state 35

    (39) expression -> ID .

    *               reduce using rule 39 (expression -> ID .)
    /               reduce using rule 39 (expression -> ID .)
    +               reduce using rule 39 (expression -> ID .)
    -               reduce using rule 39 (expression -> ID .)
    LT              reduce using rule 39 (expression -> ID .)
    GT              reduce using rule 39 (expression -> ID .)
    LE              reduce using rule 39 (expression -> ID .)
    GE              reduce using rule 39 (expression -> ID .)
    EQ              reduce using rule 39 (expression -> ID .)
    SALTO           reduce using rule 39 (expression -> ID .)
    $end            reduce using rule 39 (expression -> ID .)
    )               reduce using rule 39 (expression -> ID .)
    BOOLEANO        reduce using rule 39 (expression -> ID .)


state 36

    (27) expressionMD -> expressionMD * . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expression                     shift and go to state 58

state 37

    (28) expressionMD -> expressionMD / . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expression                     shift and go to state 59

state 38

    (31) expression -> - expression .

    *               reduce using rule 31 (expression -> - expression .)
    /               reduce using rule 31 (expression -> - expression .)
    +               reduce using rule 31 (expression -> - expression .)
    -               reduce using rule 31 (expression -> - expression .)
    LT              reduce using rule 31 (expression -> - expression .)
    GT              reduce using rule 31 (expression -> - expression .)
    LE              reduce using rule 31 (expression -> - expression .)
    GE              reduce using rule 31 (expression -> - expression .)
    EQ              reduce using rule 31 (expression -> - expression .)
    SALTO           reduce using rule 31 (expression -> - expression .)
    $end            reduce using rule 31 (expression -> - expression .)
    )               reduce using rule 31 (expression -> - expression .)
    BOOLEANO        reduce using rule 31 (expression -> - expression .)


state 39

    (12) boolean -> expressionLOG BOOLEANO . boolean
    (11) boolean -> . expressionLOG
    (12) boolean -> . expressionLOG BOOLEANO boolean
    (19) expressionLOG -> . expressionSR LT expressionSR
    (20) expressionLOG -> . expressionSR GT expressionSR
    (21) expressionLOG -> . expressionSR LE expressionSR
    (22) expressionLOG -> . expressionSR GE expressionSR
    (23) expressionLOG -> . expressionSR EQ expressionSR
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionLOG                  shift and go to state 11
    boolean                        shift and go to state 60
    expressionSR                   shift and go to state 61
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 40

    (30) expression -> ( expressionSR . )
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    )               shift and go to state 62
    +               shift and go to state 27
    -               shift and go to state 28


state 41

    (38) expression -> FCIENT ( . expressionSR )
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 63
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 42

    (1) sentencias -> statement SALTO sentencias .

    $end            reduce using rule 1 (sentencias -> statement SALTO sentencias .)


state 43

    (5) statement -> VARTYPE ID = . expressionSR
    (24) expressionSR -> . expressionSR + expressionMD
    (25) expressionSR -> . expressionSR - expressionMD
    (26) expressionSR -> . expressionMD
    (27) expressionMD -> . expressionMD * expression
    (28) expressionMD -> . expressionMD / expression
    (29) expressionMD -> . expression
    (30) expression -> . ( expressionSR )
    (31) expression -> . - expression
    (32) expression -> . + expression
    (33) expression -> . ENTERO
    (34) expression -> . DECIMAL
    (35) expression -> . V_BOOLEAN
    (36) expression -> . NOTCIENT
    (37) expression -> . OCTAL
    (38) expression -> . FCIENT ( expressionSR )
    (39) expression -> . ID

    (               shift and go to state 13
    -               shift and go to state 10
    +               shift and go to state 8
    ENTERO          shift and go to state 14
    DECIMAL         shift and go to state 15
    V_BOOLEAN       shift and go to state 16
    NOTCIENT        shift and go to state 17
    OCTAL           shift and go to state 18
    FCIENT          shift and go to state 19
    ID              shift and go to state 35

    expressionSR                   shift and go to state 64
    expressionMD                   shift and go to state 9
    expression                     shift and go to state 12

state 44

    (17) vector -> ID [ . ENTERO ]

    ENTERO          shift and go to state 65


state 45

    (14) declaration -> vector , . declaration
    (13) declaration -> . vector
    (14) declaration -> . vector , declaration
    (15) declaration -> . identificador
    (16) declaration -> . identificador , declaration
    (17) vector -> . ID [ ENTERO ]
    (18) identificador -> . ID

    ID              shift and go to state 48

    vector                         shift and go to state 23
    declaration                    shift and go to state 66
    identificador                  shift and go to state 24

state 46

    (16) declaration -> identificador , . declaration
    (13) declaration -> . vector
    (14) declaration -> . vector , declaration
    (15) declaration -> . identificador
    (16) declaration -> . identificador , declaration
    (17) vector -> . ID [ ENTERO ]
    (18) identificador -> . ID

    ID              shift and go to state 48

    identificador                  shift and go to state 24
    declaration                    shift and go to state 67
    vector                         shift and go to state 23

state 47

    (4) statement -> VECTOR VARTYPE declaration .

    SALTO           reduce using rule 4 (statement -> VECTOR VARTYPE declaration .)
    $end            reduce using rule 4 (statement -> VECTOR VARTYPE declaration .)


state 48

    (17) vector -> ID . [ ENTERO ]
    (18) identificador -> ID .

    [               shift and go to state 44
    ,               reduce using rule 18 (identificador -> ID .)
    SALTO           reduce using rule 18 (identificador -> ID .)
    $end            reduce using rule 18 (identificador -> ID .)


state 49

    (6) statement -> ID = expressionSR .
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD
    (19) expressionLOG -> expressionSR . LT expressionSR
    (20) expressionLOG -> expressionSR . GT expressionSR
    (21) expressionLOG -> expressionSR . LE expressionSR
    (22) expressionLOG -> expressionSR . GE expressionSR
    (23) expressionLOG -> expressionSR . EQ expressionSR

    SALTO           reduce using rule 6 (statement -> ID = expressionSR .)
    $end            reduce using rule 6 (statement -> ID = expressionSR .)
    +               shift and go to state 27
    -               shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    LE              shift and go to state 31
    GE              shift and go to state 32
    EQ              shift and go to state 33


state 50

    (7) statement -> ID = boolean .

    SALTO           reduce using rule 7 (statement -> ID = boolean .)
    $end            reduce using rule 7 (statement -> ID = boolean .)


state 51

    (24) expressionSR -> expressionSR + expressionMD .
    (27) expressionMD -> expressionMD . * expression
    (28) expressionMD -> expressionMD . / expression

    +               reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    -               reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    LT              reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    GT              reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    LE              reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    GE              reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    EQ              reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    SALTO           reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    $end            reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    )               reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    BOOLEANO        reduce using rule 24 (expressionSR -> expressionSR + expressionMD .)
    *               shift and go to state 36
    /               shift and go to state 37


state 52

    (25) expressionSR -> expressionSR - expressionMD .
    (27) expressionMD -> expressionMD . * expression
    (28) expressionMD -> expressionMD . / expression

    +               reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    -               reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    LT              reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    GT              reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    LE              reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    GE              reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    EQ              reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    SALTO           reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    $end            reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    )               reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    BOOLEANO        reduce using rule 25 (expressionSR -> expressionSR - expressionMD .)
    *               shift and go to state 36
    /               shift and go to state 37


state 53

    (19) expressionLOG -> expressionSR LT expressionSR .
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 19 (expressionLOG -> expressionSR LT expressionSR .)
    SALTO           reduce using rule 19 (expressionLOG -> expressionSR LT expressionSR .)
    $end            reduce using rule 19 (expressionLOG -> expressionSR LT expressionSR .)
    +               shift and go to state 27
    -               shift and go to state 28


state 54

    (20) expressionLOG -> expressionSR GT expressionSR .
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 20 (expressionLOG -> expressionSR GT expressionSR .)
    SALTO           reduce using rule 20 (expressionLOG -> expressionSR GT expressionSR .)
    $end            reduce using rule 20 (expressionLOG -> expressionSR GT expressionSR .)
    +               shift and go to state 27
    -               shift and go to state 28


state 55

    (21) expressionLOG -> expressionSR LE expressionSR .
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 21 (expressionLOG -> expressionSR LE expressionSR .)
    SALTO           reduce using rule 21 (expressionLOG -> expressionSR LE expressionSR .)
    $end            reduce using rule 21 (expressionLOG -> expressionSR LE expressionSR .)
    +               shift and go to state 27
    -               shift and go to state 28


state 56

    (22) expressionLOG -> expressionSR GE expressionSR .
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 22 (expressionLOG -> expressionSR GE expressionSR .)
    SALTO           reduce using rule 22 (expressionLOG -> expressionSR GE expressionSR .)
    $end            reduce using rule 22 (expressionLOG -> expressionSR GE expressionSR .)
    +               shift and go to state 27
    -               shift and go to state 28


state 57

    (23) expressionLOG -> expressionSR EQ expressionSR .
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 23 (expressionLOG -> expressionSR EQ expressionSR .)
    SALTO           reduce using rule 23 (expressionLOG -> expressionSR EQ expressionSR .)
    $end            reduce using rule 23 (expressionLOG -> expressionSR EQ expressionSR .)
    +               shift and go to state 27
    -               shift and go to state 28


state 58

    (27) expressionMD -> expressionMD * expression .

    *               reduce using rule 27 (expressionMD -> expressionMD * expression .)
    /               reduce using rule 27 (expressionMD -> expressionMD * expression .)
    +               reduce using rule 27 (expressionMD -> expressionMD * expression .)
    -               reduce using rule 27 (expressionMD -> expressionMD * expression .)
    LT              reduce using rule 27 (expressionMD -> expressionMD * expression .)
    GT              reduce using rule 27 (expressionMD -> expressionMD * expression .)
    LE              reduce using rule 27 (expressionMD -> expressionMD * expression .)
    GE              reduce using rule 27 (expressionMD -> expressionMD * expression .)
    EQ              reduce using rule 27 (expressionMD -> expressionMD * expression .)
    SALTO           reduce using rule 27 (expressionMD -> expressionMD * expression .)
    $end            reduce using rule 27 (expressionMD -> expressionMD * expression .)
    )               reduce using rule 27 (expressionMD -> expressionMD * expression .)
    BOOLEANO        reduce using rule 27 (expressionMD -> expressionMD * expression .)


state 59

    (28) expressionMD -> expressionMD / expression .

    *               reduce using rule 28 (expressionMD -> expressionMD / expression .)
    /               reduce using rule 28 (expressionMD -> expressionMD / expression .)
    +               reduce using rule 28 (expressionMD -> expressionMD / expression .)
    -               reduce using rule 28 (expressionMD -> expressionMD / expression .)
    LT              reduce using rule 28 (expressionMD -> expressionMD / expression .)
    GT              reduce using rule 28 (expressionMD -> expressionMD / expression .)
    LE              reduce using rule 28 (expressionMD -> expressionMD / expression .)
    GE              reduce using rule 28 (expressionMD -> expressionMD / expression .)
    EQ              reduce using rule 28 (expressionMD -> expressionMD / expression .)
    SALTO           reduce using rule 28 (expressionMD -> expressionMD / expression .)
    $end            reduce using rule 28 (expressionMD -> expressionMD / expression .)
    )               reduce using rule 28 (expressionMD -> expressionMD / expression .)
    BOOLEANO        reduce using rule 28 (expressionMD -> expressionMD / expression .)


state 60

    (12) boolean -> expressionLOG BOOLEANO boolean .

    SALTO           reduce using rule 12 (boolean -> expressionLOG BOOLEANO boolean .)
    $end            reduce using rule 12 (boolean -> expressionLOG BOOLEANO boolean .)


state 61

    (19) expressionLOG -> expressionSR . LT expressionSR
    (20) expressionLOG -> expressionSR . GT expressionSR
    (21) expressionLOG -> expressionSR . LE expressionSR
    (22) expressionLOG -> expressionSR . GE expressionSR
    (23) expressionLOG -> expressionSR . EQ expressionSR
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    LT              shift and go to state 29
    GT              shift and go to state 30
    LE              shift and go to state 31
    GE              shift and go to state 32
    EQ              shift and go to state 33
    +               shift and go to state 27
    -               shift and go to state 28


state 62

    (30) expression -> ( expressionSR ) .

    *               reduce using rule 30 (expression -> ( expressionSR ) .)
    /               reduce using rule 30 (expression -> ( expressionSR ) .)
    +               reduce using rule 30 (expression -> ( expressionSR ) .)
    -               reduce using rule 30 (expression -> ( expressionSR ) .)
    LT              reduce using rule 30 (expression -> ( expressionSR ) .)
    GT              reduce using rule 30 (expression -> ( expressionSR ) .)
    LE              reduce using rule 30 (expression -> ( expressionSR ) .)
    GE              reduce using rule 30 (expression -> ( expressionSR ) .)
    EQ              reduce using rule 30 (expression -> ( expressionSR ) .)
    SALTO           reduce using rule 30 (expression -> ( expressionSR ) .)
    $end            reduce using rule 30 (expression -> ( expressionSR ) .)
    )               reduce using rule 30 (expression -> ( expressionSR ) .)
    BOOLEANO        reduce using rule 30 (expression -> ( expressionSR ) .)


state 63

    (38) expression -> FCIENT ( expressionSR . )
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    )               shift and go to state 68
    +               shift and go to state 27
    -               shift and go to state 28


state 64

    (5) statement -> VARTYPE ID = expressionSR .
    (24) expressionSR -> expressionSR . + expressionMD
    (25) expressionSR -> expressionSR . - expressionMD

    SALTO           reduce using rule 5 (statement -> VARTYPE ID = expressionSR .)
    $end            reduce using rule 5 (statement -> VARTYPE ID = expressionSR .)
    +               shift and go to state 27
    -               shift and go to state 28


state 65

    (17) vector -> ID [ ENTERO . ]

    ]               shift and go to state 69


state 66

    (14) declaration -> vector , declaration .

    SALTO           reduce using rule 14 (declaration -> vector , declaration .)
    $end            reduce using rule 14 (declaration -> vector , declaration .)


state 67

    (16) declaration -> identificador , declaration .

    SALTO           reduce using rule 16 (declaration -> identificador , declaration .)
    $end            reduce using rule 16 (declaration -> identificador , declaration .)


state 68

    (38) expression -> FCIENT ( expressionSR ) .

    *               reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    /               reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    +               reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    -               reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    LT              reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    GT              reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    LE              reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    GE              reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    EQ              reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    SALTO           reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    $end            reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    )               reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)
    BOOLEANO        reduce using rule 38 (expression -> FCIENT ( expressionSR ) .)


state 69

    (17) vector -> ID [ ENTERO ] .

    ,               reduce using rule 17 (vector -> ID [ ENTERO ] .)
    SALTO           reduce using rule 17 (vector -> ID [ ENTERO ] .)
    $end            reduce using rule 17 (vector -> ID [ ENTERO ] .)

