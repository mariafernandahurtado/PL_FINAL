Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNACION
    SEPARADOR
    SIMBOLO

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> statement SALTO sentencias
Rule 2     sentencias -> statement
Rule 3     statement -> VARTYPE declaration
Rule 4     statement -> VARTYPE ID = expressionSR
Rule 5     statement -> ID = expressionSR
Rule 6     statement -> expressionSR
Rule 7     statement -> boolean
Rule 8     boolean -> expressionLOG
Rule 9     boolean -> expressionLOG BOOLEANO boolean
Rule 10    declaration -> identificador
Rule 11    declaration -> identificador , declaration
Rule 12    identificador -> ID
Rule 13    expressionLOG -> expressionSR LT expressionSR
Rule 14    expressionLOG -> expressionSR GT expressionSR
Rule 15    statement -> <empty>
Rule 16    expressionSR -> expressionSR + expressionMD
Rule 17    expressionSR -> expressionSR - expressionMD
Rule 18    expressionSR -> expressionMD
Rule 19    expressionMD -> expressionMD * expression
Rule 20    expressionMD -> expressionMD / expression
Rule 21    expressionMD -> expression
Rule 22    expression -> ( expressionSR )
Rule 23    expression -> - expression
Rule 24    expression -> + expression
Rule 25    expression -> ENTERO
Rule 26    expression -> DECIMAL
Rule 27    expression -> V_BOOLEAN
Rule 28    expression -> NOTCIENT
Rule 29    expression -> OCTAL
Rule 30    expression -> FCIENT ( expressionSR )
Rule 31    expression -> ID

Terminals, with rules where they appear

(                    : 22 30
)                    : 22 30
*                    : 19
+                    : 16 24
,                    : 11
-                    : 17 23
/                    : 20
=                    : 4 5
ASIGNACION           : 
BOOLEANO             : 9
DECIMAL              : 26
ENTERO               : 25
FCIENT               : 30
GT                   : 14
ID                   : 4 5 12 31
LT                   : 13
NOTCIENT             : 28
OCTAL                : 29
SALTO                : 1
SEPARADOR            : 
SIMBOLO              : 
VARTYPE              : 3 4
V_BOOLEAN            : 27
error                : 

Nonterminals, with rules where they appear

boolean              : 7 9
declaration          : 3 11
expression           : 19 20 21 23 24
expressionLOG        : 8 9
expressionMD         : 16 17 18 19 20
expressionSR         : 4 5 6 13 13 14 14 16 17 22 30
identificador        : 10 11
sentencias           : 1 0
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE declaration
    (4) statement -> . VARTYPE ID = expressionSR
    (5) statement -> . ID = expressionSR
    (6) statement -> . expressionSR
    (7) statement -> . boolean
    (15) statement -> .
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (8) boolean -> . expressionLOG
    (9) boolean -> . expressionLOG BOOLEANO boolean
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (13) expressionLOG -> . expressionSR LT expressionSR
    (14) expressionLOG -> . expressionSR GT expressionSR
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    VARTYPE         shift and go to state 3
    ID              shift and go to state 4
    SALTO           reduce using rule 15 (statement -> .)
    $end            reduce using rule 15 (statement -> .)
    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18

    sentencias                     shift and go to state 1
    statement                      shift and go to state 2
    expressionSR                   shift and go to state 5
    boolean                        shift and go to state 6
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 10
    expression                     shift and go to state 11

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> statement . SALTO sentencias
    (2) sentencias -> statement .

    SALTO           shift and go to state 19
    $end            reduce using rule 2 (sentencias -> statement .)


state 3

    (3) statement -> VARTYPE . declaration
    (4) statement -> VARTYPE . ID = expressionSR
    (10) declaration -> . identificador
    (11) declaration -> . identificador , declaration
    (12) identificador -> . ID

    ID              shift and go to state 21

    declaration                    shift and go to state 20
    identificador                  shift and go to state 22

state 4

    (5) statement -> ID . = expressionSR
    (31) expression -> ID .

    =               shift and go to state 23
    *               reduce using rule 31 (expression -> ID .)
    /               reduce using rule 31 (expression -> ID .)
    +               reduce using rule 31 (expression -> ID .)
    -               reduce using rule 31 (expression -> ID .)
    LT              reduce using rule 31 (expression -> ID .)
    GT              reduce using rule 31 (expression -> ID .)
    SALTO           reduce using rule 31 (expression -> ID .)
    $end            reduce using rule 31 (expression -> ID .)


state 5

    (6) statement -> expressionSR .
    (16) expressionSR -> expressionSR . + expressionMD
    (17) expressionSR -> expressionSR . - expressionMD
    (13) expressionLOG -> expressionSR . LT expressionSR
    (14) expressionLOG -> expressionSR . GT expressionSR

    SALTO           reduce using rule 6 (statement -> expressionSR .)
    $end            reduce using rule 6 (statement -> expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25
    LT              shift and go to state 26
    GT              shift and go to state 27


state 6

    (7) statement -> boolean .

    SALTO           reduce using rule 7 (statement -> boolean .)
    $end            reduce using rule 7 (statement -> boolean .)


state 7

    (24) expression -> + . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expression                     shift and go to state 28

state 8

    (18) expressionSR -> expressionMD .
    (19) expressionMD -> expressionMD . * expression
    (20) expressionMD -> expressionMD . / expression

    +               reduce using rule 18 (expressionSR -> expressionMD .)
    -               reduce using rule 18 (expressionSR -> expressionMD .)
    LT              reduce using rule 18 (expressionSR -> expressionMD .)
    GT              reduce using rule 18 (expressionSR -> expressionMD .)
    SALTO           reduce using rule 18 (expressionSR -> expressionMD .)
    $end            reduce using rule 18 (expressionSR -> expressionMD .)
    )               reduce using rule 18 (expressionSR -> expressionMD .)
    BOOLEANO        reduce using rule 18 (expressionSR -> expressionMD .)
    *               shift and go to state 30
    /               shift and go to state 31


state 9

    (23) expression -> - . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expression                     shift and go to state 32

state 10

    (8) boolean -> expressionLOG .
    (9) boolean -> expressionLOG . BOOLEANO boolean

    SALTO           reduce using rule 8 (boolean -> expressionLOG .)
    $end            reduce using rule 8 (boolean -> expressionLOG .)
    BOOLEANO        shift and go to state 33


state 11

    (21) expressionMD -> expression .

    *               reduce using rule 21 (expressionMD -> expression .)
    /               reduce using rule 21 (expressionMD -> expression .)
    +               reduce using rule 21 (expressionMD -> expression .)
    -               reduce using rule 21 (expressionMD -> expression .)
    LT              reduce using rule 21 (expressionMD -> expression .)
    GT              reduce using rule 21 (expressionMD -> expression .)
    SALTO           reduce using rule 21 (expressionMD -> expression .)
    $end            reduce using rule 21 (expressionMD -> expression .)
    )               reduce using rule 21 (expressionMD -> expression .)
    BOOLEANO        reduce using rule 21 (expressionMD -> expression .)


state 12

    (22) expression -> ( . expressionSR )
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionSR                   shift and go to state 34
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 13

    (25) expression -> ENTERO .

    *               reduce using rule 25 (expression -> ENTERO .)
    /               reduce using rule 25 (expression -> ENTERO .)
    +               reduce using rule 25 (expression -> ENTERO .)
    -               reduce using rule 25 (expression -> ENTERO .)
    LT              reduce using rule 25 (expression -> ENTERO .)
    GT              reduce using rule 25 (expression -> ENTERO .)
    SALTO           reduce using rule 25 (expression -> ENTERO .)
    $end            reduce using rule 25 (expression -> ENTERO .)
    )               reduce using rule 25 (expression -> ENTERO .)
    BOOLEANO        reduce using rule 25 (expression -> ENTERO .)


state 14

    (26) expression -> DECIMAL .

    *               reduce using rule 26 (expression -> DECIMAL .)
    /               reduce using rule 26 (expression -> DECIMAL .)
    +               reduce using rule 26 (expression -> DECIMAL .)
    -               reduce using rule 26 (expression -> DECIMAL .)
    LT              reduce using rule 26 (expression -> DECIMAL .)
    GT              reduce using rule 26 (expression -> DECIMAL .)
    SALTO           reduce using rule 26 (expression -> DECIMAL .)
    $end            reduce using rule 26 (expression -> DECIMAL .)
    )               reduce using rule 26 (expression -> DECIMAL .)
    BOOLEANO        reduce using rule 26 (expression -> DECIMAL .)


state 15

    (27) expression -> V_BOOLEAN .

    *               reduce using rule 27 (expression -> V_BOOLEAN .)
    /               reduce using rule 27 (expression -> V_BOOLEAN .)
    +               reduce using rule 27 (expression -> V_BOOLEAN .)
    -               reduce using rule 27 (expression -> V_BOOLEAN .)
    LT              reduce using rule 27 (expression -> V_BOOLEAN .)
    GT              reduce using rule 27 (expression -> V_BOOLEAN .)
    SALTO           reduce using rule 27 (expression -> V_BOOLEAN .)
    $end            reduce using rule 27 (expression -> V_BOOLEAN .)
    )               reduce using rule 27 (expression -> V_BOOLEAN .)
    BOOLEANO        reduce using rule 27 (expression -> V_BOOLEAN .)


state 16

    (28) expression -> NOTCIENT .

    *               reduce using rule 28 (expression -> NOTCIENT .)
    /               reduce using rule 28 (expression -> NOTCIENT .)
    +               reduce using rule 28 (expression -> NOTCIENT .)
    -               reduce using rule 28 (expression -> NOTCIENT .)
    LT              reduce using rule 28 (expression -> NOTCIENT .)
    GT              reduce using rule 28 (expression -> NOTCIENT .)
    SALTO           reduce using rule 28 (expression -> NOTCIENT .)
    $end            reduce using rule 28 (expression -> NOTCIENT .)
    )               reduce using rule 28 (expression -> NOTCIENT .)
    BOOLEANO        reduce using rule 28 (expression -> NOTCIENT .)


state 17

    (29) expression -> OCTAL .

    *               reduce using rule 29 (expression -> OCTAL .)
    /               reduce using rule 29 (expression -> OCTAL .)
    +               reduce using rule 29 (expression -> OCTAL .)
    -               reduce using rule 29 (expression -> OCTAL .)
    LT              reduce using rule 29 (expression -> OCTAL .)
    GT              reduce using rule 29 (expression -> OCTAL .)
    SALTO           reduce using rule 29 (expression -> OCTAL .)
    $end            reduce using rule 29 (expression -> OCTAL .)
    )               reduce using rule 29 (expression -> OCTAL .)
    BOOLEANO        reduce using rule 29 (expression -> OCTAL .)


state 18

    (30) expression -> FCIENT . ( expressionSR )

    (               shift and go to state 35


state 19

    (1) sentencias -> statement SALTO . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE declaration
    (4) statement -> . VARTYPE ID = expressionSR
    (5) statement -> . ID = expressionSR
    (6) statement -> . expressionSR
    (7) statement -> . boolean
    (15) statement -> .
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (8) boolean -> . expressionLOG
    (9) boolean -> . expressionLOG BOOLEANO boolean
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (13) expressionLOG -> . expressionSR LT expressionSR
    (14) expressionLOG -> . expressionSR GT expressionSR
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    VARTYPE         shift and go to state 3
    ID              shift and go to state 4
    SALTO           reduce using rule 15 (statement -> .)
    $end            reduce using rule 15 (statement -> .)
    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18

    statement                      shift and go to state 2
    sentencias                     shift and go to state 36
    expressionSR                   shift and go to state 5
    boolean                        shift and go to state 6
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 10
    expression                     shift and go to state 11

state 20

    (3) statement -> VARTYPE declaration .

    SALTO           reduce using rule 3 (statement -> VARTYPE declaration .)
    $end            reduce using rule 3 (statement -> VARTYPE declaration .)


state 21

    (4) statement -> VARTYPE ID . = expressionSR
    (12) identificador -> ID .

    =               shift and go to state 37
    ,               reduce using rule 12 (identificador -> ID .)
    SALTO           reduce using rule 12 (identificador -> ID .)
    $end            reduce using rule 12 (identificador -> ID .)


state 22

    (10) declaration -> identificador .
    (11) declaration -> identificador . , declaration

    SALTO           reduce using rule 10 (declaration -> identificador .)
    $end            reduce using rule 10 (declaration -> identificador .)
    ,               shift and go to state 38


state 23

    (5) statement -> ID = . expressionSR
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionSR                   shift and go to state 39
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 24

    (16) expressionSR -> expressionSR + . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionMD                   shift and go to state 40
    expression                     shift and go to state 11

state 25

    (17) expressionSR -> expressionSR - . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionMD                   shift and go to state 41
    expression                     shift and go to state 11

state 26

    (13) expressionLOG -> expressionSR LT . expressionSR
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionSR                   shift and go to state 42
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 27

    (14) expressionLOG -> expressionSR GT . expressionSR
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionSR                   shift and go to state 43
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 28

    (24) expression -> + expression .

    *               reduce using rule 24 (expression -> + expression .)
    /               reduce using rule 24 (expression -> + expression .)
    +               reduce using rule 24 (expression -> + expression .)
    -               reduce using rule 24 (expression -> + expression .)
    LT              reduce using rule 24 (expression -> + expression .)
    GT              reduce using rule 24 (expression -> + expression .)
    SALTO           reduce using rule 24 (expression -> + expression .)
    $end            reduce using rule 24 (expression -> + expression .)
    )               reduce using rule 24 (expression -> + expression .)
    BOOLEANO        reduce using rule 24 (expression -> + expression .)


state 29

    (31) expression -> ID .

    *               reduce using rule 31 (expression -> ID .)
    /               reduce using rule 31 (expression -> ID .)
    +               reduce using rule 31 (expression -> ID .)
    -               reduce using rule 31 (expression -> ID .)
    LT              reduce using rule 31 (expression -> ID .)
    GT              reduce using rule 31 (expression -> ID .)
    SALTO           reduce using rule 31 (expression -> ID .)
    $end            reduce using rule 31 (expression -> ID .)
    )               reduce using rule 31 (expression -> ID .)
    BOOLEANO        reduce using rule 31 (expression -> ID .)


state 30

    (19) expressionMD -> expressionMD * . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expression                     shift and go to state 44

state 31

    (20) expressionMD -> expressionMD / . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expression                     shift and go to state 45

state 32

    (23) expression -> - expression .

    *               reduce using rule 23 (expression -> - expression .)
    /               reduce using rule 23 (expression -> - expression .)
    +               reduce using rule 23 (expression -> - expression .)
    -               reduce using rule 23 (expression -> - expression .)
    LT              reduce using rule 23 (expression -> - expression .)
    GT              reduce using rule 23 (expression -> - expression .)
    SALTO           reduce using rule 23 (expression -> - expression .)
    $end            reduce using rule 23 (expression -> - expression .)
    )               reduce using rule 23 (expression -> - expression .)
    BOOLEANO        reduce using rule 23 (expression -> - expression .)


state 33

    (9) boolean -> expressionLOG BOOLEANO . boolean
    (8) boolean -> . expressionLOG
    (9) boolean -> . expressionLOG BOOLEANO boolean
    (13) expressionLOG -> . expressionSR LT expressionSR
    (14) expressionLOG -> . expressionSR GT expressionSR
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionLOG                  shift and go to state 10
    boolean                        shift and go to state 46
    expressionSR                   shift and go to state 47
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 34

    (22) expression -> ( expressionSR . )
    (16) expressionSR -> expressionSR . + expressionMD
    (17) expressionSR -> expressionSR . - expressionMD

    )               shift and go to state 48
    +               shift and go to state 24
    -               shift and go to state 25


state 35

    (30) expression -> FCIENT ( . expressionSR )
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionSR                   shift and go to state 49
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 36

    (1) sentencias -> statement SALTO sentencias .

    $end            reduce using rule 1 (sentencias -> statement SALTO sentencias .)


state 37

    (4) statement -> VARTYPE ID = . expressionSR
    (16) expressionSR -> . expressionSR + expressionMD
    (17) expressionSR -> . expressionSR - expressionMD
    (18) expressionSR -> . expressionMD
    (19) expressionMD -> . expressionMD * expression
    (20) expressionMD -> . expressionMD / expression
    (21) expressionMD -> . expression
    (22) expression -> . ( expressionSR )
    (23) expression -> . - expression
    (24) expression -> . + expression
    (25) expression -> . ENTERO
    (26) expression -> . DECIMAL
    (27) expression -> . V_BOOLEAN
    (28) expression -> . NOTCIENT
    (29) expression -> . OCTAL
    (30) expression -> . FCIENT ( expressionSR )
    (31) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 29

    expressionSR                   shift and go to state 50
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 38

    (11) declaration -> identificador , . declaration
    (10) declaration -> . identificador
    (11) declaration -> . identificador , declaration
    (12) identificador -> . ID

    ID              shift and go to state 52

    identificador                  shift and go to state 22
    declaration                    shift and go to state 51

state 39

    (5) statement -> ID = expressionSR .
    (16) expressionSR -> expressionSR . + expressionMD
    (17) expressionSR -> expressionSR . - expressionMD

    SALTO           reduce using rule 5 (statement -> ID = expressionSR .)
    $end            reduce using rule 5 (statement -> ID = expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 40

    (16) expressionSR -> expressionSR + expressionMD .
    (19) expressionMD -> expressionMD . * expression
    (20) expressionMD -> expressionMD . / expression

    +               reduce using rule 16 (expressionSR -> expressionSR + expressionMD .)
    -               reduce using rule 16 (expressionSR -> expressionSR + expressionMD .)
    LT              reduce using rule 16 (expressionSR -> expressionSR + expressionMD .)
    GT              reduce using rule 16 (expressionSR -> expressionSR + expressionMD .)
    SALTO           reduce using rule 16 (expressionSR -> expressionSR + expressionMD .)
    $end            reduce using rule 16 (expressionSR -> expressionSR + expressionMD .)
    )               reduce using rule 16 (expressionSR -> expressionSR + expressionMD .)
    BOOLEANO        reduce using rule 16 (expressionSR -> expressionSR + expressionMD .)
    *               shift and go to state 30
    /               shift and go to state 31


state 41

    (17) expressionSR -> expressionSR - expressionMD .
    (19) expressionMD -> expressionMD . * expression
    (20) expressionMD -> expressionMD . / expression

    +               reduce using rule 17 (expressionSR -> expressionSR - expressionMD .)
    -               reduce using rule 17 (expressionSR -> expressionSR - expressionMD .)
    LT              reduce using rule 17 (expressionSR -> expressionSR - expressionMD .)
    GT              reduce using rule 17 (expressionSR -> expressionSR - expressionMD .)
    SALTO           reduce using rule 17 (expressionSR -> expressionSR - expressionMD .)
    $end            reduce using rule 17 (expressionSR -> expressionSR - expressionMD .)
    )               reduce using rule 17 (expressionSR -> expressionSR - expressionMD .)
    BOOLEANO        reduce using rule 17 (expressionSR -> expressionSR - expressionMD .)
    *               shift and go to state 30
    /               shift and go to state 31


state 42

    (13) expressionLOG -> expressionSR LT expressionSR .
    (16) expressionSR -> expressionSR . + expressionMD
    (17) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 13 (expressionLOG -> expressionSR LT expressionSR .)
    SALTO           reduce using rule 13 (expressionLOG -> expressionSR LT expressionSR .)
    $end            reduce using rule 13 (expressionLOG -> expressionSR LT expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 43

    (14) expressionLOG -> expressionSR GT expressionSR .
    (16) expressionSR -> expressionSR . + expressionMD
    (17) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 14 (expressionLOG -> expressionSR GT expressionSR .)
    SALTO           reduce using rule 14 (expressionLOG -> expressionSR GT expressionSR .)
    $end            reduce using rule 14 (expressionLOG -> expressionSR GT expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 44

    (19) expressionMD -> expressionMD * expression .

    *               reduce using rule 19 (expressionMD -> expressionMD * expression .)
    /               reduce using rule 19 (expressionMD -> expressionMD * expression .)
    +               reduce using rule 19 (expressionMD -> expressionMD * expression .)
    -               reduce using rule 19 (expressionMD -> expressionMD * expression .)
    LT              reduce using rule 19 (expressionMD -> expressionMD * expression .)
    GT              reduce using rule 19 (expressionMD -> expressionMD * expression .)
    SALTO           reduce using rule 19 (expressionMD -> expressionMD * expression .)
    $end            reduce using rule 19 (expressionMD -> expressionMD * expression .)
    )               reduce using rule 19 (expressionMD -> expressionMD * expression .)
    BOOLEANO        reduce using rule 19 (expressionMD -> expressionMD * expression .)


state 45

    (20) expressionMD -> expressionMD / expression .

    *               reduce using rule 20 (expressionMD -> expressionMD / expression .)
    /               reduce using rule 20 (expressionMD -> expressionMD / expression .)
    +               reduce using rule 20 (expressionMD -> expressionMD / expression .)
    -               reduce using rule 20 (expressionMD -> expressionMD / expression .)
    LT              reduce using rule 20 (expressionMD -> expressionMD / expression .)
    GT              reduce using rule 20 (expressionMD -> expressionMD / expression .)
    SALTO           reduce using rule 20 (expressionMD -> expressionMD / expression .)
    $end            reduce using rule 20 (expressionMD -> expressionMD / expression .)
    )               reduce using rule 20 (expressionMD -> expressionMD / expression .)
    BOOLEANO        reduce using rule 20 (expressionMD -> expressionMD / expression .)


state 46

    (9) boolean -> expressionLOG BOOLEANO boolean .

    SALTO           reduce using rule 9 (boolean -> expressionLOG BOOLEANO boolean .)
    $end            reduce using rule 9 (boolean -> expressionLOG BOOLEANO boolean .)


state 47

    (13) expressionLOG -> expressionSR . LT expressionSR
    (14) expressionLOG -> expressionSR . GT expressionSR
    (16) expressionSR -> expressionSR . + expressionMD
    (17) expressionSR -> expressionSR . - expressionMD

    LT              shift and go to state 26
    GT              shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 25


state 48

    (22) expression -> ( expressionSR ) .

    *               reduce using rule 22 (expression -> ( expressionSR ) .)
    /               reduce using rule 22 (expression -> ( expressionSR ) .)
    +               reduce using rule 22 (expression -> ( expressionSR ) .)
    -               reduce using rule 22 (expression -> ( expressionSR ) .)
    LT              reduce using rule 22 (expression -> ( expressionSR ) .)
    GT              reduce using rule 22 (expression -> ( expressionSR ) .)
    SALTO           reduce using rule 22 (expression -> ( expressionSR ) .)
    $end            reduce using rule 22 (expression -> ( expressionSR ) .)
    )               reduce using rule 22 (expression -> ( expressionSR ) .)
    BOOLEANO        reduce using rule 22 (expression -> ( expressionSR ) .)


state 49

    (30) expression -> FCIENT ( expressionSR . )
    (16) expressionSR -> expressionSR . + expressionMD
    (17) expressionSR -> expressionSR . - expressionMD

    )               shift and go to state 53
    +               shift and go to state 24
    -               shift and go to state 25


state 50

    (4) statement -> VARTYPE ID = expressionSR .
    (16) expressionSR -> expressionSR . + expressionMD
    (17) expressionSR -> expressionSR . - expressionMD

    SALTO           reduce using rule 4 (statement -> VARTYPE ID = expressionSR .)
    $end            reduce using rule 4 (statement -> VARTYPE ID = expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 51

    (11) declaration -> identificador , declaration .

    SALTO           reduce using rule 11 (declaration -> identificador , declaration .)
    $end            reduce using rule 11 (declaration -> identificador , declaration .)


state 52

    (12) identificador -> ID .

    ,               reduce using rule 12 (identificador -> ID .)
    SALTO           reduce using rule 12 (identificador -> ID .)
    $end            reduce using rule 12 (identificador -> ID .)


state 53

    (30) expression -> FCIENT ( expressionSR ) .

    *               reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    /               reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    +               reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    -               reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    LT              reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    GT              reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    SALTO           reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    $end            reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    )               reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)
    BOOLEANO        reduce using rule 30 (expression -> FCIENT ( expressionSR ) .)

