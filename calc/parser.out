Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNACION
    SEPARADOR
    SIMBOLO

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> statement SALTO sentencias
Rule 2     sentencias -> statement
Rule 3     statement -> VARTYPE declaration
Rule 4     statement -> VARTYPE ID = expressionSR
Rule 5     statement -> ID = expressionSR
Rule 6     statement -> ID = boolean
Rule 7     statement -> expressionSR
Rule 8     statement -> boolean
Rule 9     boolean -> expressionLOG
Rule 10    boolean -> expressionLOG BOOLEANO boolean
Rule 11    declaration -> identificador
Rule 12    declaration -> identificador , declaration
Rule 13    identificador -> ID
Rule 14    expressionLOG -> expressionSR LT expressionSR
Rule 15    expressionLOG -> expressionSR GT expressionSR
Rule 16    expressionLOG -> expressionSR LE expressionSR
Rule 17    expressionLOG -> expressionSR GE expressionSR
Rule 18    expressionLOG -> expressionSR EQ expressionSR
Rule 19    statement -> <empty>
Rule 20    expressionSR -> expressionSR + expressionMD
Rule 21    expressionSR -> expressionSR - expressionMD
Rule 22    expressionSR -> expressionMD
Rule 23    expressionMD -> expressionMD * expression
Rule 24    expressionMD -> expressionMD / expression
Rule 25    expressionMD -> expression
Rule 26    expression -> ( expressionSR )
Rule 27    expression -> - expression
Rule 28    expression -> + expression
Rule 29    expression -> ENTERO
Rule 30    expression -> DECIMAL
Rule 31    expression -> V_BOOLEAN
Rule 32    expression -> NOTCIENT
Rule 33    expression -> OCTAL
Rule 34    expression -> FCIENT ( expressionSR )
Rule 35    expression -> ID

Terminals, with rules where they appear

(                    : 26 34
)                    : 26 34
*                    : 23
+                    : 20 28
,                    : 12
-                    : 21 27
/                    : 24
=                    : 4 5 6
ASIGNACION           : 
BOOLEANO             : 10
DECIMAL              : 30
ENTERO               : 29
EQ                   : 18
FCIENT               : 34
GE                   : 17
GT                   : 15
ID                   : 4 5 6 13 35
LE                   : 16
LT                   : 14
NOTCIENT             : 32
OCTAL                : 33
SALTO                : 1
SEPARADOR            : 
SIMBOLO              : 
VARTYPE              : 3 4
V_BOOLEAN            : 31
error                : 

Nonterminals, with rules where they appear

boolean              : 6 8 10
declaration          : 3 12
expression           : 23 24 25 27 28
expressionLOG        : 9 10
expressionMD         : 20 21 22 23 24
expressionSR         : 4 5 7 14 14 15 15 16 16 17 17 18 18 20 21 26 34
identificador        : 11 12
sentencias           : 1 0
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE declaration
    (4) statement -> . VARTYPE ID = expressionSR
    (5) statement -> . ID = expressionSR
    (6) statement -> . ID = boolean
    (7) statement -> . expressionSR
    (8) statement -> . boolean
    (19) statement -> .
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (9) boolean -> . expressionLOG
    (10) boolean -> . expressionLOG BOOLEANO boolean
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (14) expressionLOG -> . expressionSR LT expressionSR
    (15) expressionLOG -> . expressionSR GT expressionSR
    (16) expressionLOG -> . expressionSR LE expressionSR
    (17) expressionLOG -> . expressionSR GE expressionSR
    (18) expressionLOG -> . expressionSR EQ expressionSR
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    VARTYPE         shift and go to state 3
    ID              shift and go to state 4
    SALTO           reduce using rule 19 (statement -> .)
    $end            reduce using rule 19 (statement -> .)
    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18

    sentencias                     shift and go to state 1
    statement                      shift and go to state 2
    expressionSR                   shift and go to state 5
    boolean                        shift and go to state 6
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 10
    expression                     shift and go to state 11

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> statement . SALTO sentencias
    (2) sentencias -> statement .

    SALTO           shift and go to state 19
    $end            reduce using rule 2 (sentencias -> statement .)


state 3

    (3) statement -> VARTYPE . declaration
    (4) statement -> VARTYPE . ID = expressionSR
    (11) declaration -> . identificador
    (12) declaration -> . identificador , declaration
    (13) identificador -> . ID

    ID              shift and go to state 21

    declaration                    shift and go to state 20
    identificador                  shift and go to state 22

state 4

    (5) statement -> ID . = expressionSR
    (6) statement -> ID . = boolean
    (35) expression -> ID .

    =               shift and go to state 23
    *               reduce using rule 35 (expression -> ID .)
    /               reduce using rule 35 (expression -> ID .)
    +               reduce using rule 35 (expression -> ID .)
    -               reduce using rule 35 (expression -> ID .)
    LT              reduce using rule 35 (expression -> ID .)
    GT              reduce using rule 35 (expression -> ID .)
    LE              reduce using rule 35 (expression -> ID .)
    GE              reduce using rule 35 (expression -> ID .)
    EQ              reduce using rule 35 (expression -> ID .)
    SALTO           reduce using rule 35 (expression -> ID .)
    $end            reduce using rule 35 (expression -> ID .)


state 5

    (7) statement -> expressionSR .
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD
    (14) expressionLOG -> expressionSR . LT expressionSR
    (15) expressionLOG -> expressionSR . GT expressionSR
    (16) expressionLOG -> expressionSR . LE expressionSR
    (17) expressionLOG -> expressionSR . GE expressionSR
    (18) expressionLOG -> expressionSR . EQ expressionSR

    SALTO           reduce using rule 7 (statement -> expressionSR .)
    $end            reduce using rule 7 (statement -> expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25
    LT              shift and go to state 26
    GT              shift and go to state 27
    LE              shift and go to state 28
    GE              shift and go to state 29
    EQ              shift and go to state 30


state 6

    (8) statement -> boolean .

    SALTO           reduce using rule 8 (statement -> boolean .)
    $end            reduce using rule 8 (statement -> boolean .)


state 7

    (28) expression -> + . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expression                     shift and go to state 31

state 8

    (22) expressionSR -> expressionMD .
    (23) expressionMD -> expressionMD . * expression
    (24) expressionMD -> expressionMD . / expression

    +               reduce using rule 22 (expressionSR -> expressionMD .)
    -               reduce using rule 22 (expressionSR -> expressionMD .)
    LT              reduce using rule 22 (expressionSR -> expressionMD .)
    GT              reduce using rule 22 (expressionSR -> expressionMD .)
    LE              reduce using rule 22 (expressionSR -> expressionMD .)
    GE              reduce using rule 22 (expressionSR -> expressionMD .)
    EQ              reduce using rule 22 (expressionSR -> expressionMD .)
    SALTO           reduce using rule 22 (expressionSR -> expressionMD .)
    $end            reduce using rule 22 (expressionSR -> expressionMD .)
    )               reduce using rule 22 (expressionSR -> expressionMD .)
    BOOLEANO        reduce using rule 22 (expressionSR -> expressionMD .)
    *               shift and go to state 33
    /               shift and go to state 34


state 9

    (27) expression -> - . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expression                     shift and go to state 35

state 10

    (9) boolean -> expressionLOG .
    (10) boolean -> expressionLOG . BOOLEANO boolean

    SALTO           reduce using rule 9 (boolean -> expressionLOG .)
    $end            reduce using rule 9 (boolean -> expressionLOG .)
    BOOLEANO        shift and go to state 36


state 11

    (25) expressionMD -> expression .

    *               reduce using rule 25 (expressionMD -> expression .)
    /               reduce using rule 25 (expressionMD -> expression .)
    +               reduce using rule 25 (expressionMD -> expression .)
    -               reduce using rule 25 (expressionMD -> expression .)
    LT              reduce using rule 25 (expressionMD -> expression .)
    GT              reduce using rule 25 (expressionMD -> expression .)
    LE              reduce using rule 25 (expressionMD -> expression .)
    GE              reduce using rule 25 (expressionMD -> expression .)
    EQ              reduce using rule 25 (expressionMD -> expression .)
    SALTO           reduce using rule 25 (expressionMD -> expression .)
    $end            reduce using rule 25 (expressionMD -> expression .)
    )               reduce using rule 25 (expressionMD -> expression .)
    BOOLEANO        reduce using rule 25 (expressionMD -> expression .)


state 12

    (26) expression -> ( . expressionSR )
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 37
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 13

    (29) expression -> ENTERO .

    *               reduce using rule 29 (expression -> ENTERO .)
    /               reduce using rule 29 (expression -> ENTERO .)
    +               reduce using rule 29 (expression -> ENTERO .)
    -               reduce using rule 29 (expression -> ENTERO .)
    LT              reduce using rule 29 (expression -> ENTERO .)
    GT              reduce using rule 29 (expression -> ENTERO .)
    LE              reduce using rule 29 (expression -> ENTERO .)
    GE              reduce using rule 29 (expression -> ENTERO .)
    EQ              reduce using rule 29 (expression -> ENTERO .)
    SALTO           reduce using rule 29 (expression -> ENTERO .)
    $end            reduce using rule 29 (expression -> ENTERO .)
    )               reduce using rule 29 (expression -> ENTERO .)
    BOOLEANO        reduce using rule 29 (expression -> ENTERO .)


state 14

    (30) expression -> DECIMAL .

    *               reduce using rule 30 (expression -> DECIMAL .)
    /               reduce using rule 30 (expression -> DECIMAL .)
    +               reduce using rule 30 (expression -> DECIMAL .)
    -               reduce using rule 30 (expression -> DECIMAL .)
    LT              reduce using rule 30 (expression -> DECIMAL .)
    GT              reduce using rule 30 (expression -> DECIMAL .)
    LE              reduce using rule 30 (expression -> DECIMAL .)
    GE              reduce using rule 30 (expression -> DECIMAL .)
    EQ              reduce using rule 30 (expression -> DECIMAL .)
    SALTO           reduce using rule 30 (expression -> DECIMAL .)
    $end            reduce using rule 30 (expression -> DECIMAL .)
    )               reduce using rule 30 (expression -> DECIMAL .)
    BOOLEANO        reduce using rule 30 (expression -> DECIMAL .)


state 15

    (31) expression -> V_BOOLEAN .

    *               reduce using rule 31 (expression -> V_BOOLEAN .)
    /               reduce using rule 31 (expression -> V_BOOLEAN .)
    +               reduce using rule 31 (expression -> V_BOOLEAN .)
    -               reduce using rule 31 (expression -> V_BOOLEAN .)
    LT              reduce using rule 31 (expression -> V_BOOLEAN .)
    GT              reduce using rule 31 (expression -> V_BOOLEAN .)
    LE              reduce using rule 31 (expression -> V_BOOLEAN .)
    GE              reduce using rule 31 (expression -> V_BOOLEAN .)
    EQ              reduce using rule 31 (expression -> V_BOOLEAN .)
    SALTO           reduce using rule 31 (expression -> V_BOOLEAN .)
    $end            reduce using rule 31 (expression -> V_BOOLEAN .)
    )               reduce using rule 31 (expression -> V_BOOLEAN .)
    BOOLEANO        reduce using rule 31 (expression -> V_BOOLEAN .)


state 16

    (32) expression -> NOTCIENT .

    *               reduce using rule 32 (expression -> NOTCIENT .)
    /               reduce using rule 32 (expression -> NOTCIENT .)
    +               reduce using rule 32 (expression -> NOTCIENT .)
    -               reduce using rule 32 (expression -> NOTCIENT .)
    LT              reduce using rule 32 (expression -> NOTCIENT .)
    GT              reduce using rule 32 (expression -> NOTCIENT .)
    LE              reduce using rule 32 (expression -> NOTCIENT .)
    GE              reduce using rule 32 (expression -> NOTCIENT .)
    EQ              reduce using rule 32 (expression -> NOTCIENT .)
    SALTO           reduce using rule 32 (expression -> NOTCIENT .)
    $end            reduce using rule 32 (expression -> NOTCIENT .)
    )               reduce using rule 32 (expression -> NOTCIENT .)
    BOOLEANO        reduce using rule 32 (expression -> NOTCIENT .)


state 17

    (33) expression -> OCTAL .

    *               reduce using rule 33 (expression -> OCTAL .)
    /               reduce using rule 33 (expression -> OCTAL .)
    +               reduce using rule 33 (expression -> OCTAL .)
    -               reduce using rule 33 (expression -> OCTAL .)
    LT              reduce using rule 33 (expression -> OCTAL .)
    GT              reduce using rule 33 (expression -> OCTAL .)
    LE              reduce using rule 33 (expression -> OCTAL .)
    GE              reduce using rule 33 (expression -> OCTAL .)
    EQ              reduce using rule 33 (expression -> OCTAL .)
    SALTO           reduce using rule 33 (expression -> OCTAL .)
    $end            reduce using rule 33 (expression -> OCTAL .)
    )               reduce using rule 33 (expression -> OCTAL .)
    BOOLEANO        reduce using rule 33 (expression -> OCTAL .)


state 18

    (34) expression -> FCIENT . ( expressionSR )

    (               shift and go to state 38


state 19

    (1) sentencias -> statement SALTO . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE declaration
    (4) statement -> . VARTYPE ID = expressionSR
    (5) statement -> . ID = expressionSR
    (6) statement -> . ID = boolean
    (7) statement -> . expressionSR
    (8) statement -> . boolean
    (19) statement -> .
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (9) boolean -> . expressionLOG
    (10) boolean -> . expressionLOG BOOLEANO boolean
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (14) expressionLOG -> . expressionSR LT expressionSR
    (15) expressionLOG -> . expressionSR GT expressionSR
    (16) expressionLOG -> . expressionSR LE expressionSR
    (17) expressionLOG -> . expressionSR GE expressionSR
    (18) expressionLOG -> . expressionSR EQ expressionSR
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    VARTYPE         shift and go to state 3
    ID              shift and go to state 4
    SALTO           reduce using rule 19 (statement -> .)
    $end            reduce using rule 19 (statement -> .)
    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18

    statement                      shift and go to state 2
    sentencias                     shift and go to state 39
    expressionSR                   shift and go to state 5
    boolean                        shift and go to state 6
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 10
    expression                     shift and go to state 11

state 20

    (3) statement -> VARTYPE declaration .

    SALTO           reduce using rule 3 (statement -> VARTYPE declaration .)
    $end            reduce using rule 3 (statement -> VARTYPE declaration .)


state 21

    (4) statement -> VARTYPE ID . = expressionSR
    (13) identificador -> ID .

    =               shift and go to state 40
    ,               reduce using rule 13 (identificador -> ID .)
    SALTO           reduce using rule 13 (identificador -> ID .)
    $end            reduce using rule 13 (identificador -> ID .)


state 22

    (11) declaration -> identificador .
    (12) declaration -> identificador . , declaration

    SALTO           reduce using rule 11 (declaration -> identificador .)
    $end            reduce using rule 11 (declaration -> identificador .)
    ,               shift and go to state 41


state 23

    (5) statement -> ID = . expressionSR
    (6) statement -> ID = . boolean
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (9) boolean -> . expressionLOG
    (10) boolean -> . expressionLOG BOOLEANO boolean
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (14) expressionLOG -> . expressionSR LT expressionSR
    (15) expressionLOG -> . expressionSR GT expressionSR
    (16) expressionLOG -> . expressionSR LE expressionSR
    (17) expressionLOG -> . expressionSR GE expressionSR
    (18) expressionLOG -> . expressionSR EQ expressionSR
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 42
    boolean                        shift and go to state 43
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 10
    expression                     shift and go to state 11

state 24

    (20) expressionSR -> expressionSR + . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionMD                   shift and go to state 44
    expression                     shift and go to state 11

state 25

    (21) expressionSR -> expressionSR - . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionMD                   shift and go to state 45
    expression                     shift and go to state 11

state 26

    (14) expressionLOG -> expressionSR LT . expressionSR
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 46
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 27

    (15) expressionLOG -> expressionSR GT . expressionSR
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 47
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 28

    (16) expressionLOG -> expressionSR LE . expressionSR
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 48
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 29

    (17) expressionLOG -> expressionSR GE . expressionSR
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 49
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 30

    (18) expressionLOG -> expressionSR EQ . expressionSR
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 50
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 31

    (28) expression -> + expression .

    *               reduce using rule 28 (expression -> + expression .)
    /               reduce using rule 28 (expression -> + expression .)
    +               reduce using rule 28 (expression -> + expression .)
    -               reduce using rule 28 (expression -> + expression .)
    LT              reduce using rule 28 (expression -> + expression .)
    GT              reduce using rule 28 (expression -> + expression .)
    LE              reduce using rule 28 (expression -> + expression .)
    GE              reduce using rule 28 (expression -> + expression .)
    EQ              reduce using rule 28 (expression -> + expression .)
    SALTO           reduce using rule 28 (expression -> + expression .)
    $end            reduce using rule 28 (expression -> + expression .)
    )               reduce using rule 28 (expression -> + expression .)
    BOOLEANO        reduce using rule 28 (expression -> + expression .)


state 32

    (35) expression -> ID .

    *               reduce using rule 35 (expression -> ID .)
    /               reduce using rule 35 (expression -> ID .)
    +               reduce using rule 35 (expression -> ID .)
    -               reduce using rule 35 (expression -> ID .)
    LT              reduce using rule 35 (expression -> ID .)
    GT              reduce using rule 35 (expression -> ID .)
    LE              reduce using rule 35 (expression -> ID .)
    GE              reduce using rule 35 (expression -> ID .)
    EQ              reduce using rule 35 (expression -> ID .)
    SALTO           reduce using rule 35 (expression -> ID .)
    $end            reduce using rule 35 (expression -> ID .)
    )               reduce using rule 35 (expression -> ID .)
    BOOLEANO        reduce using rule 35 (expression -> ID .)


state 33

    (23) expressionMD -> expressionMD * . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expression                     shift and go to state 51

state 34

    (24) expressionMD -> expressionMD / . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expression                     shift and go to state 52

state 35

    (27) expression -> - expression .

    *               reduce using rule 27 (expression -> - expression .)
    /               reduce using rule 27 (expression -> - expression .)
    +               reduce using rule 27 (expression -> - expression .)
    -               reduce using rule 27 (expression -> - expression .)
    LT              reduce using rule 27 (expression -> - expression .)
    GT              reduce using rule 27 (expression -> - expression .)
    LE              reduce using rule 27 (expression -> - expression .)
    GE              reduce using rule 27 (expression -> - expression .)
    EQ              reduce using rule 27 (expression -> - expression .)
    SALTO           reduce using rule 27 (expression -> - expression .)
    $end            reduce using rule 27 (expression -> - expression .)
    )               reduce using rule 27 (expression -> - expression .)
    BOOLEANO        reduce using rule 27 (expression -> - expression .)


state 36

    (10) boolean -> expressionLOG BOOLEANO . boolean
    (9) boolean -> . expressionLOG
    (10) boolean -> . expressionLOG BOOLEANO boolean
    (14) expressionLOG -> . expressionSR LT expressionSR
    (15) expressionLOG -> . expressionSR GT expressionSR
    (16) expressionLOG -> . expressionSR LE expressionSR
    (17) expressionLOG -> . expressionSR GE expressionSR
    (18) expressionLOG -> . expressionSR EQ expressionSR
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionLOG                  shift and go to state 10
    boolean                        shift and go to state 53
    expressionSR                   shift and go to state 54
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 37

    (26) expression -> ( expressionSR . )
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    )               shift and go to state 55
    +               shift and go to state 24
    -               shift and go to state 25


state 38

    (34) expression -> FCIENT ( . expressionSR )
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 56
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 39

    (1) sentencias -> statement SALTO sentencias .

    $end            reduce using rule 1 (sentencias -> statement SALTO sentencias .)


state 40

    (4) statement -> VARTYPE ID = . expressionSR
    (20) expressionSR -> . expressionSR + expressionMD
    (21) expressionSR -> . expressionSR - expressionMD
    (22) expressionSR -> . expressionMD
    (23) expressionMD -> . expressionMD * expression
    (24) expressionMD -> . expressionMD / expression
    (25) expressionMD -> . expression
    (26) expression -> . ( expressionSR )
    (27) expression -> . - expression
    (28) expression -> . + expression
    (29) expression -> . ENTERO
    (30) expression -> . DECIMAL
    (31) expression -> . V_BOOLEAN
    (32) expression -> . NOTCIENT
    (33) expression -> . OCTAL
    (34) expression -> . FCIENT ( expressionSR )
    (35) expression -> . ID

    (               shift and go to state 12
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 13
    DECIMAL         shift and go to state 14
    V_BOOLEAN       shift and go to state 15
    NOTCIENT        shift and go to state 16
    OCTAL           shift and go to state 17
    FCIENT          shift and go to state 18
    ID              shift and go to state 32

    expressionSR                   shift and go to state 57
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 11

state 41

    (12) declaration -> identificador , . declaration
    (11) declaration -> . identificador
    (12) declaration -> . identificador , declaration
    (13) identificador -> . ID

    ID              shift and go to state 59

    identificador                  shift and go to state 22
    declaration                    shift and go to state 58

state 42

    (5) statement -> ID = expressionSR .
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD
    (14) expressionLOG -> expressionSR . LT expressionSR
    (15) expressionLOG -> expressionSR . GT expressionSR
    (16) expressionLOG -> expressionSR . LE expressionSR
    (17) expressionLOG -> expressionSR . GE expressionSR
    (18) expressionLOG -> expressionSR . EQ expressionSR

    SALTO           reduce using rule 5 (statement -> ID = expressionSR .)
    $end            reduce using rule 5 (statement -> ID = expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25
    LT              shift and go to state 26
    GT              shift and go to state 27
    LE              shift and go to state 28
    GE              shift and go to state 29
    EQ              shift and go to state 30


state 43

    (6) statement -> ID = boolean .

    SALTO           reduce using rule 6 (statement -> ID = boolean .)
    $end            reduce using rule 6 (statement -> ID = boolean .)


state 44

    (20) expressionSR -> expressionSR + expressionMD .
    (23) expressionMD -> expressionMD . * expression
    (24) expressionMD -> expressionMD . / expression

    +               reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    -               reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    LT              reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    GT              reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    LE              reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    GE              reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    EQ              reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    SALTO           reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    $end            reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    )               reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    BOOLEANO        reduce using rule 20 (expressionSR -> expressionSR + expressionMD .)
    *               shift and go to state 33
    /               shift and go to state 34


state 45

    (21) expressionSR -> expressionSR - expressionMD .
    (23) expressionMD -> expressionMD . * expression
    (24) expressionMD -> expressionMD . / expression

    +               reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    -               reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    LT              reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    GT              reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    LE              reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    GE              reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    EQ              reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    SALTO           reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    $end            reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    )               reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    BOOLEANO        reduce using rule 21 (expressionSR -> expressionSR - expressionMD .)
    *               shift and go to state 33
    /               shift and go to state 34


state 46

    (14) expressionLOG -> expressionSR LT expressionSR .
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 14 (expressionLOG -> expressionSR LT expressionSR .)
    SALTO           reduce using rule 14 (expressionLOG -> expressionSR LT expressionSR .)
    $end            reduce using rule 14 (expressionLOG -> expressionSR LT expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 47

    (15) expressionLOG -> expressionSR GT expressionSR .
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 15 (expressionLOG -> expressionSR GT expressionSR .)
    SALTO           reduce using rule 15 (expressionLOG -> expressionSR GT expressionSR .)
    $end            reduce using rule 15 (expressionLOG -> expressionSR GT expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 48

    (16) expressionLOG -> expressionSR LE expressionSR .
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 16 (expressionLOG -> expressionSR LE expressionSR .)
    SALTO           reduce using rule 16 (expressionLOG -> expressionSR LE expressionSR .)
    $end            reduce using rule 16 (expressionLOG -> expressionSR LE expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 49

    (17) expressionLOG -> expressionSR GE expressionSR .
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 17 (expressionLOG -> expressionSR GE expressionSR .)
    SALTO           reduce using rule 17 (expressionLOG -> expressionSR GE expressionSR .)
    $end            reduce using rule 17 (expressionLOG -> expressionSR GE expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 50

    (18) expressionLOG -> expressionSR EQ expressionSR .
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    BOOLEANO        reduce using rule 18 (expressionLOG -> expressionSR EQ expressionSR .)
    SALTO           reduce using rule 18 (expressionLOG -> expressionSR EQ expressionSR .)
    $end            reduce using rule 18 (expressionLOG -> expressionSR EQ expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 51

    (23) expressionMD -> expressionMD * expression .

    *               reduce using rule 23 (expressionMD -> expressionMD * expression .)
    /               reduce using rule 23 (expressionMD -> expressionMD * expression .)
    +               reduce using rule 23 (expressionMD -> expressionMD * expression .)
    -               reduce using rule 23 (expressionMD -> expressionMD * expression .)
    LT              reduce using rule 23 (expressionMD -> expressionMD * expression .)
    GT              reduce using rule 23 (expressionMD -> expressionMD * expression .)
    LE              reduce using rule 23 (expressionMD -> expressionMD * expression .)
    GE              reduce using rule 23 (expressionMD -> expressionMD * expression .)
    EQ              reduce using rule 23 (expressionMD -> expressionMD * expression .)
    SALTO           reduce using rule 23 (expressionMD -> expressionMD * expression .)
    $end            reduce using rule 23 (expressionMD -> expressionMD * expression .)
    )               reduce using rule 23 (expressionMD -> expressionMD * expression .)
    BOOLEANO        reduce using rule 23 (expressionMD -> expressionMD * expression .)


state 52

    (24) expressionMD -> expressionMD / expression .

    *               reduce using rule 24 (expressionMD -> expressionMD / expression .)
    /               reduce using rule 24 (expressionMD -> expressionMD / expression .)
    +               reduce using rule 24 (expressionMD -> expressionMD / expression .)
    -               reduce using rule 24 (expressionMD -> expressionMD / expression .)
    LT              reduce using rule 24 (expressionMD -> expressionMD / expression .)
    GT              reduce using rule 24 (expressionMD -> expressionMD / expression .)
    LE              reduce using rule 24 (expressionMD -> expressionMD / expression .)
    GE              reduce using rule 24 (expressionMD -> expressionMD / expression .)
    EQ              reduce using rule 24 (expressionMD -> expressionMD / expression .)
    SALTO           reduce using rule 24 (expressionMD -> expressionMD / expression .)
    $end            reduce using rule 24 (expressionMD -> expressionMD / expression .)
    )               reduce using rule 24 (expressionMD -> expressionMD / expression .)
    BOOLEANO        reduce using rule 24 (expressionMD -> expressionMD / expression .)


state 53

    (10) boolean -> expressionLOG BOOLEANO boolean .

    SALTO           reduce using rule 10 (boolean -> expressionLOG BOOLEANO boolean .)
    $end            reduce using rule 10 (boolean -> expressionLOG BOOLEANO boolean .)


state 54

    (14) expressionLOG -> expressionSR . LT expressionSR
    (15) expressionLOG -> expressionSR . GT expressionSR
    (16) expressionLOG -> expressionSR . LE expressionSR
    (17) expressionLOG -> expressionSR . GE expressionSR
    (18) expressionLOG -> expressionSR . EQ expressionSR
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    LT              shift and go to state 26
    GT              shift and go to state 27
    LE              shift and go to state 28
    GE              shift and go to state 29
    EQ              shift and go to state 30
    +               shift and go to state 24
    -               shift and go to state 25


state 55

    (26) expression -> ( expressionSR ) .

    *               reduce using rule 26 (expression -> ( expressionSR ) .)
    /               reduce using rule 26 (expression -> ( expressionSR ) .)
    +               reduce using rule 26 (expression -> ( expressionSR ) .)
    -               reduce using rule 26 (expression -> ( expressionSR ) .)
    LT              reduce using rule 26 (expression -> ( expressionSR ) .)
    GT              reduce using rule 26 (expression -> ( expressionSR ) .)
    LE              reduce using rule 26 (expression -> ( expressionSR ) .)
    GE              reduce using rule 26 (expression -> ( expressionSR ) .)
    EQ              reduce using rule 26 (expression -> ( expressionSR ) .)
    SALTO           reduce using rule 26 (expression -> ( expressionSR ) .)
    $end            reduce using rule 26 (expression -> ( expressionSR ) .)
    )               reduce using rule 26 (expression -> ( expressionSR ) .)
    BOOLEANO        reduce using rule 26 (expression -> ( expressionSR ) .)


state 56

    (34) expression -> FCIENT ( expressionSR . )
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    )               shift and go to state 60
    +               shift and go to state 24
    -               shift and go to state 25


state 57

    (4) statement -> VARTYPE ID = expressionSR .
    (20) expressionSR -> expressionSR . + expressionMD
    (21) expressionSR -> expressionSR . - expressionMD

    SALTO           reduce using rule 4 (statement -> VARTYPE ID = expressionSR .)
    $end            reduce using rule 4 (statement -> VARTYPE ID = expressionSR .)
    +               shift and go to state 24
    -               shift and go to state 25


state 58

    (12) declaration -> identificador , declaration .

    SALTO           reduce using rule 12 (declaration -> identificador , declaration .)
    $end            reduce using rule 12 (declaration -> identificador , declaration .)


state 59

    (13) identificador -> ID .

    ,               reduce using rule 13 (identificador -> ID .)
    SALTO           reduce using rule 13 (identificador -> ID .)
    $end            reduce using rule 13 (identificador -> ID .)


state 60

    (34) expression -> FCIENT ( expressionSR ) .

    *               reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    /               reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    +               reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    -               reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    LT              reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    GT              reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    LE              reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    GE              reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    EQ              reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    SALTO           reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    $end            reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    )               reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)
    BOOLEANO        reduce using rule 34 (expression -> FCIENT ( expressionSR ) .)

