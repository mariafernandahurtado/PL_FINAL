Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNACION
    SEPARADOR
    SIMBOLO

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> statement SALTO sentencias
Rule 2     sentencias -> statement
Rule 3     statement -> VARTYPE ID
Rule 4     statement -> VARTYPE ID = expressionSR
Rule 5     statement -> ID = expressionSR
Rule 6     statement -> expressionSR
Rule 7     statement -> expressionLOG BOOLEANO expressionLOG
Rule 8     expressionLOG -> expressionSR LT expressionSR
Rule 9     expressionLOG -> expressionSR GT expressionSR
Rule 10    statement -> <empty>
Rule 11    expressionSR -> expressionSR + expressionMD
Rule 12    expressionSR -> expressionSR - expressionMD
Rule 13    expressionSR -> expressionMD
Rule 14    expressionSR -> expressionLOG
Rule 15    expressionMD -> expressionMD * expression
Rule 16    expressionMD -> expressionMD / expression
Rule 17    expressionMD -> expression
Rule 18    expression -> ( expressionSR )
Rule 19    expression -> - expression
Rule 20    expression -> + expression
Rule 21    expression -> ENTERO
Rule 22    expression -> DECIMAL
Rule 23    expression -> V_BOOLEAN
Rule 24    expression -> NOTCIENT
Rule 25    expression -> OCTAL
Rule 26    expression -> FCIENT ( expressionSR )
Rule 27    expression -> ID

Terminals, with rules where they appear

(                    : 18 26
)                    : 18 26
*                    : 15
+                    : 11 20
-                    : 12 19
/                    : 16
=                    : 4 5
ASIGNACION           : 
BOOLEANO             : 7
DECIMAL              : 22
ENTERO               : 21
FCIENT               : 26
GT                   : 9
ID                   : 3 4 5 27
LT                   : 8
NOTCIENT             : 24
OCTAL                : 25
SALTO                : 1
SEPARADOR            : 
SIMBOLO              : 
VARTYPE              : 3 4
V_BOOLEAN            : 23
error                : 

Nonterminals, with rules where they appear

expression           : 15 16 17 19 20
expressionLOG        : 7 7 14
expressionMD         : 11 12 13 15 16
expressionSR         : 4 5 6 8 8 9 9 11 12 18 26
sentencias           : 1 0
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE ID
    (4) statement -> . VARTYPE ID = expressionSR
    (5) statement -> . ID = expressionSR
    (6) statement -> . expressionSR
    (7) statement -> . expressionLOG BOOLEANO expressionLOG
    (10) statement -> .
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    VARTYPE         shift and go to state 3
    ID              shift and go to state 4
    SALTO           reduce using rule 10 (statement -> .)
    $end            reduce using rule 10 (statement -> .)
    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17

    sentencias                     shift and go to state 1
    statement                      shift and go to state 2
    expressionSR                   shift and go to state 5
    expressionLOG                  shift and go to state 6
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 10

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> statement . SALTO sentencias
    (2) sentencias -> statement .

    SALTO           shift and go to state 18
    $end            reduce using rule 2 (sentencias -> statement .)


state 3

    (3) statement -> VARTYPE . ID
    (4) statement -> VARTYPE . ID = expressionSR

    ID              shift and go to state 19


state 4

    (5) statement -> ID . = expressionSR
    (27) expression -> ID .

    =               shift and go to state 20
    *               reduce using rule 27 (expression -> ID .)
    /               reduce using rule 27 (expression -> ID .)
    +               reduce using rule 27 (expression -> ID .)
    -               reduce using rule 27 (expression -> ID .)
    LT              reduce using rule 27 (expression -> ID .)
    GT              reduce using rule 27 (expression -> ID .)
    SALTO           reduce using rule 27 (expression -> ID .)
    $end            reduce using rule 27 (expression -> ID .)


state 5

    (6) statement -> expressionSR .
    (11) expressionSR -> expressionSR . + expressionMD
    (12) expressionSR -> expressionSR . - expressionMD
    (8) expressionLOG -> expressionSR . LT expressionSR
    (9) expressionLOG -> expressionSR . GT expressionSR

    SALTO           reduce using rule 6 (statement -> expressionSR .)
    $end            reduce using rule 6 (statement -> expressionSR .)
    +               shift and go to state 21
    -               shift and go to state 22
    LT              shift and go to state 23
    GT              shift and go to state 24


state 6

    (7) statement -> expressionLOG . BOOLEANO expressionLOG
    (14) expressionSR -> expressionLOG .

    BOOLEANO        shift and go to state 25
    +               reduce using rule 14 (expressionSR -> expressionLOG .)
    -               reduce using rule 14 (expressionSR -> expressionLOG .)
    LT              reduce using rule 14 (expressionSR -> expressionLOG .)
    GT              reduce using rule 14 (expressionSR -> expressionLOG .)
    SALTO           reduce using rule 14 (expressionSR -> expressionLOG .)
    $end            reduce using rule 14 (expressionSR -> expressionLOG .)


state 7

    (20) expression -> + . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expression                     shift and go to state 26

state 8

    (13) expressionSR -> expressionMD .
    (15) expressionMD -> expressionMD . * expression
    (16) expressionMD -> expressionMD . / expression

    +               reduce using rule 13 (expressionSR -> expressionMD .)
    -               reduce using rule 13 (expressionSR -> expressionMD .)
    LT              reduce using rule 13 (expressionSR -> expressionMD .)
    GT              reduce using rule 13 (expressionSR -> expressionMD .)
    SALTO           reduce using rule 13 (expressionSR -> expressionMD .)
    $end            reduce using rule 13 (expressionSR -> expressionMD .)
    )               reduce using rule 13 (expressionSR -> expressionMD .)
    BOOLEANO        reduce using rule 13 (expressionSR -> expressionMD .)
    *               shift and go to state 28
    /               shift and go to state 29


state 9

    (19) expression -> - . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expression                     shift and go to state 30

state 10

    (17) expressionMD -> expression .

    *               reduce using rule 17 (expressionMD -> expression .)
    /               reduce using rule 17 (expressionMD -> expression .)
    +               reduce using rule 17 (expressionMD -> expression .)
    -               reduce using rule 17 (expressionMD -> expression .)
    LT              reduce using rule 17 (expressionMD -> expression .)
    GT              reduce using rule 17 (expressionMD -> expression .)
    SALTO           reduce using rule 17 (expressionMD -> expression .)
    $end            reduce using rule 17 (expressionMD -> expression .)
    )               reduce using rule 17 (expressionMD -> expression .)
    BOOLEANO        reduce using rule 17 (expressionMD -> expression .)


state 11

    (18) expression -> ( . expressionSR )
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionSR                   shift and go to state 31
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 32
    expression                     shift and go to state 10

state 12

    (21) expression -> ENTERO .

    *               reduce using rule 21 (expression -> ENTERO .)
    /               reduce using rule 21 (expression -> ENTERO .)
    +               reduce using rule 21 (expression -> ENTERO .)
    -               reduce using rule 21 (expression -> ENTERO .)
    LT              reduce using rule 21 (expression -> ENTERO .)
    GT              reduce using rule 21 (expression -> ENTERO .)
    SALTO           reduce using rule 21 (expression -> ENTERO .)
    $end            reduce using rule 21 (expression -> ENTERO .)
    )               reduce using rule 21 (expression -> ENTERO .)
    BOOLEANO        reduce using rule 21 (expression -> ENTERO .)


state 13

    (22) expression -> DECIMAL .

    *               reduce using rule 22 (expression -> DECIMAL .)
    /               reduce using rule 22 (expression -> DECIMAL .)
    +               reduce using rule 22 (expression -> DECIMAL .)
    -               reduce using rule 22 (expression -> DECIMAL .)
    LT              reduce using rule 22 (expression -> DECIMAL .)
    GT              reduce using rule 22 (expression -> DECIMAL .)
    SALTO           reduce using rule 22 (expression -> DECIMAL .)
    $end            reduce using rule 22 (expression -> DECIMAL .)
    )               reduce using rule 22 (expression -> DECIMAL .)
    BOOLEANO        reduce using rule 22 (expression -> DECIMAL .)


state 14

    (23) expression -> V_BOOLEAN .

    *               reduce using rule 23 (expression -> V_BOOLEAN .)
    /               reduce using rule 23 (expression -> V_BOOLEAN .)
    +               reduce using rule 23 (expression -> V_BOOLEAN .)
    -               reduce using rule 23 (expression -> V_BOOLEAN .)
    LT              reduce using rule 23 (expression -> V_BOOLEAN .)
    GT              reduce using rule 23 (expression -> V_BOOLEAN .)
    SALTO           reduce using rule 23 (expression -> V_BOOLEAN .)
    $end            reduce using rule 23 (expression -> V_BOOLEAN .)
    )               reduce using rule 23 (expression -> V_BOOLEAN .)
    BOOLEANO        reduce using rule 23 (expression -> V_BOOLEAN .)


state 15

    (24) expression -> NOTCIENT .

    *               reduce using rule 24 (expression -> NOTCIENT .)
    /               reduce using rule 24 (expression -> NOTCIENT .)
    +               reduce using rule 24 (expression -> NOTCIENT .)
    -               reduce using rule 24 (expression -> NOTCIENT .)
    LT              reduce using rule 24 (expression -> NOTCIENT .)
    GT              reduce using rule 24 (expression -> NOTCIENT .)
    SALTO           reduce using rule 24 (expression -> NOTCIENT .)
    $end            reduce using rule 24 (expression -> NOTCIENT .)
    )               reduce using rule 24 (expression -> NOTCIENT .)
    BOOLEANO        reduce using rule 24 (expression -> NOTCIENT .)


state 16

    (25) expression -> OCTAL .

    *               reduce using rule 25 (expression -> OCTAL .)
    /               reduce using rule 25 (expression -> OCTAL .)
    +               reduce using rule 25 (expression -> OCTAL .)
    -               reduce using rule 25 (expression -> OCTAL .)
    LT              reduce using rule 25 (expression -> OCTAL .)
    GT              reduce using rule 25 (expression -> OCTAL .)
    SALTO           reduce using rule 25 (expression -> OCTAL .)
    $end            reduce using rule 25 (expression -> OCTAL .)
    )               reduce using rule 25 (expression -> OCTAL .)
    BOOLEANO        reduce using rule 25 (expression -> OCTAL .)


state 17

    (26) expression -> FCIENT . ( expressionSR )

    (               shift and go to state 33


state 18

    (1) sentencias -> statement SALTO . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE ID
    (4) statement -> . VARTYPE ID = expressionSR
    (5) statement -> . ID = expressionSR
    (6) statement -> . expressionSR
    (7) statement -> . expressionLOG BOOLEANO expressionLOG
    (10) statement -> .
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    VARTYPE         shift and go to state 3
    ID              shift and go to state 4
    SALTO           reduce using rule 10 (statement -> .)
    $end            reduce using rule 10 (statement -> .)
    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17

    statement                      shift and go to state 2
    sentencias                     shift and go to state 34
    expressionSR                   shift and go to state 5
    expressionLOG                  shift and go to state 6
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 10

state 19

    (3) statement -> VARTYPE ID .
    (4) statement -> VARTYPE ID . = expressionSR

    SALTO           reduce using rule 3 (statement -> VARTYPE ID .)
    $end            reduce using rule 3 (statement -> VARTYPE ID .)
    =               shift and go to state 35


state 20

    (5) statement -> ID = . expressionSR
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionSR                   shift and go to state 36
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 32
    expression                     shift and go to state 10

state 21

    (11) expressionSR -> expressionSR + . expressionMD
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionMD                   shift and go to state 37
    expression                     shift and go to state 10

state 22

    (12) expressionSR -> expressionSR - . expressionMD
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionMD                   shift and go to state 38
    expression                     shift and go to state 10

state 23

    (8) expressionLOG -> expressionSR LT . expressionSR
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionSR                   shift and go to state 39
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 32
    expression                     shift and go to state 10

state 24

    (9) expressionLOG -> expressionSR GT . expressionSR
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionSR                   shift and go to state 40
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 32
    expression                     shift and go to state 10

state 25

    (7) statement -> expressionLOG BOOLEANO . expressionLOG
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionLOG                  shift and go to state 41
    expressionSR                   shift and go to state 42
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 10

state 26

    (20) expression -> + expression .

    *               reduce using rule 20 (expression -> + expression .)
    /               reduce using rule 20 (expression -> + expression .)
    +               reduce using rule 20 (expression -> + expression .)
    -               reduce using rule 20 (expression -> + expression .)
    LT              reduce using rule 20 (expression -> + expression .)
    GT              reduce using rule 20 (expression -> + expression .)
    SALTO           reduce using rule 20 (expression -> + expression .)
    $end            reduce using rule 20 (expression -> + expression .)
    )               reduce using rule 20 (expression -> + expression .)
    BOOLEANO        reduce using rule 20 (expression -> + expression .)


state 27

    (27) expression -> ID .

    *               reduce using rule 27 (expression -> ID .)
    /               reduce using rule 27 (expression -> ID .)
    +               reduce using rule 27 (expression -> ID .)
    -               reduce using rule 27 (expression -> ID .)
    LT              reduce using rule 27 (expression -> ID .)
    GT              reduce using rule 27 (expression -> ID .)
    SALTO           reduce using rule 27 (expression -> ID .)
    $end            reduce using rule 27 (expression -> ID .)
    )               reduce using rule 27 (expression -> ID .)
    BOOLEANO        reduce using rule 27 (expression -> ID .)


state 28

    (15) expressionMD -> expressionMD * . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expression                     shift and go to state 43

state 29

    (16) expressionMD -> expressionMD / . expression
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expression                     shift and go to state 44

state 30

    (19) expression -> - expression .

    *               reduce using rule 19 (expression -> - expression .)
    /               reduce using rule 19 (expression -> - expression .)
    +               reduce using rule 19 (expression -> - expression .)
    -               reduce using rule 19 (expression -> - expression .)
    LT              reduce using rule 19 (expression -> - expression .)
    GT              reduce using rule 19 (expression -> - expression .)
    SALTO           reduce using rule 19 (expression -> - expression .)
    $end            reduce using rule 19 (expression -> - expression .)
    )               reduce using rule 19 (expression -> - expression .)
    BOOLEANO        reduce using rule 19 (expression -> - expression .)


state 31

    (18) expression -> ( expressionSR . )
    (11) expressionSR -> expressionSR . + expressionMD
    (12) expressionSR -> expressionSR . - expressionMD
    (8) expressionLOG -> expressionSR . LT expressionSR
    (9) expressionLOG -> expressionSR . GT expressionSR

    )               shift and go to state 45
    +               shift and go to state 21
    -               shift and go to state 22
    LT              shift and go to state 23
    GT              shift and go to state 24


state 32

    (14) expressionSR -> expressionLOG .

    )               reduce using rule 14 (expressionSR -> expressionLOG .)
    +               reduce using rule 14 (expressionSR -> expressionLOG .)
    -               reduce using rule 14 (expressionSR -> expressionLOG .)
    LT              reduce using rule 14 (expressionSR -> expressionLOG .)
    GT              reduce using rule 14 (expressionSR -> expressionLOG .)
    SALTO           reduce using rule 14 (expressionSR -> expressionLOG .)
    $end            reduce using rule 14 (expressionSR -> expressionLOG .)
    BOOLEANO        reduce using rule 14 (expressionSR -> expressionLOG .)


state 33

    (26) expression -> FCIENT ( . expressionSR )
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionSR                   shift and go to state 46
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 32
    expression                     shift and go to state 10

state 34

    (1) sentencias -> statement SALTO sentencias .

    $end            reduce using rule 1 (sentencias -> statement SALTO sentencias .)


state 35

    (4) statement -> VARTYPE ID = . expressionSR
    (11) expressionSR -> . expressionSR + expressionMD
    (12) expressionSR -> . expressionSR - expressionMD
    (13) expressionSR -> . expressionMD
    (14) expressionSR -> . expressionLOG
    (15) expressionMD -> . expressionMD * expression
    (16) expressionMD -> . expressionMD / expression
    (17) expressionMD -> . expression
    (8) expressionLOG -> . expressionSR LT expressionSR
    (9) expressionLOG -> . expressionSR GT expressionSR
    (18) expression -> . ( expressionSR )
    (19) expression -> . - expression
    (20) expression -> . + expression
    (21) expression -> . ENTERO
    (22) expression -> . DECIMAL
    (23) expression -> . V_BOOLEAN
    (24) expression -> . NOTCIENT
    (25) expression -> . OCTAL
    (26) expression -> . FCIENT ( expressionSR )
    (27) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 27

    expressionSR                   shift and go to state 47
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 32
    expression                     shift and go to state 10

state 36

    (5) statement -> ID = expressionSR .
    (11) expressionSR -> expressionSR . + expressionMD
    (12) expressionSR -> expressionSR . - expressionMD
    (8) expressionLOG -> expressionSR . LT expressionSR
    (9) expressionLOG -> expressionSR . GT expressionSR

    SALTO           reduce using rule 5 (statement -> ID = expressionSR .)
    $end            reduce using rule 5 (statement -> ID = expressionSR .)
    +               shift and go to state 21
    -               shift and go to state 22
    LT              shift and go to state 23
    GT              shift and go to state 24


state 37

    (11) expressionSR -> expressionSR + expressionMD .
    (15) expressionMD -> expressionMD . * expression
    (16) expressionMD -> expressionMD . / expression

    +               reduce using rule 11 (expressionSR -> expressionSR + expressionMD .)
    -               reduce using rule 11 (expressionSR -> expressionSR + expressionMD .)
    LT              reduce using rule 11 (expressionSR -> expressionSR + expressionMD .)
    GT              reduce using rule 11 (expressionSR -> expressionSR + expressionMD .)
    SALTO           reduce using rule 11 (expressionSR -> expressionSR + expressionMD .)
    $end            reduce using rule 11 (expressionSR -> expressionSR + expressionMD .)
    )               reduce using rule 11 (expressionSR -> expressionSR + expressionMD .)
    BOOLEANO        reduce using rule 11 (expressionSR -> expressionSR + expressionMD .)
    *               shift and go to state 28
    /               shift and go to state 29


state 38

    (12) expressionSR -> expressionSR - expressionMD .
    (15) expressionMD -> expressionMD . * expression
    (16) expressionMD -> expressionMD . / expression

    +               reduce using rule 12 (expressionSR -> expressionSR - expressionMD .)
    -               reduce using rule 12 (expressionSR -> expressionSR - expressionMD .)
    LT              reduce using rule 12 (expressionSR -> expressionSR - expressionMD .)
    GT              reduce using rule 12 (expressionSR -> expressionSR - expressionMD .)
    SALTO           reduce using rule 12 (expressionSR -> expressionSR - expressionMD .)
    $end            reduce using rule 12 (expressionSR -> expressionSR - expressionMD .)
    )               reduce using rule 12 (expressionSR -> expressionSR - expressionMD .)
    BOOLEANO        reduce using rule 12 (expressionSR -> expressionSR - expressionMD .)
    *               shift and go to state 28
    /               shift and go to state 29


state 39

    (8) expressionLOG -> expressionSR LT expressionSR .
    (11) expressionSR -> expressionSR . + expressionMD
    (12) expressionSR -> expressionSR . - expressionMD
    (8) expressionLOG -> expressionSR . LT expressionSR
    (9) expressionLOG -> expressionSR . GT expressionSR

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    BOOLEANO        reduce using rule 8 (expressionLOG -> expressionSR LT expressionSR .)
    SALTO           reduce using rule 8 (expressionLOG -> expressionSR LT expressionSR .)
    $end            reduce using rule 8 (expressionLOG -> expressionSR LT expressionSR .)
    )               reduce using rule 8 (expressionLOG -> expressionSR LT expressionSR .)
    +               shift and go to state 21
    -               shift and go to state 22
    LT              shift and go to state 23
    GT              shift and go to state 24

  ! +               [ reduce using rule 8 (expressionLOG -> expressionSR LT expressionSR .) ]
  ! -               [ reduce using rule 8 (expressionLOG -> expressionSR LT expressionSR .) ]
  ! LT              [ reduce using rule 8 (expressionLOG -> expressionSR LT expressionSR .) ]
  ! GT              [ reduce using rule 8 (expressionLOG -> expressionSR LT expressionSR .) ]


state 40

    (9) expressionLOG -> expressionSR GT expressionSR .
    (11) expressionSR -> expressionSR . + expressionMD
    (12) expressionSR -> expressionSR . - expressionMD
    (8) expressionLOG -> expressionSR . LT expressionSR
    (9) expressionLOG -> expressionSR . GT expressionSR

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    BOOLEANO        reduce using rule 9 (expressionLOG -> expressionSR GT expressionSR .)
    SALTO           reduce using rule 9 (expressionLOG -> expressionSR GT expressionSR .)
    $end            reduce using rule 9 (expressionLOG -> expressionSR GT expressionSR .)
    )               reduce using rule 9 (expressionLOG -> expressionSR GT expressionSR .)
    +               shift and go to state 21
    -               shift and go to state 22
    LT              shift and go to state 23
    GT              shift and go to state 24

  ! +               [ reduce using rule 9 (expressionLOG -> expressionSR GT expressionSR .) ]
  ! -               [ reduce using rule 9 (expressionLOG -> expressionSR GT expressionSR .) ]
  ! LT              [ reduce using rule 9 (expressionLOG -> expressionSR GT expressionSR .) ]
  ! GT              [ reduce using rule 9 (expressionLOG -> expressionSR GT expressionSR .) ]


state 41

    (7) statement -> expressionLOG BOOLEANO expressionLOG .
    (14) expressionSR -> expressionLOG .

    SALTO           reduce using rule 7 (statement -> expressionLOG BOOLEANO expressionLOG .)
    $end            reduce using rule 7 (statement -> expressionLOG BOOLEANO expressionLOG .)
    LT              reduce using rule 14 (expressionSR -> expressionLOG .)
    GT              reduce using rule 14 (expressionSR -> expressionLOG .)
    +               reduce using rule 14 (expressionSR -> expressionLOG .)
    -               reduce using rule 14 (expressionSR -> expressionLOG .)


state 42

    (8) expressionLOG -> expressionSR . LT expressionSR
    (9) expressionLOG -> expressionSR . GT expressionSR
    (11) expressionSR -> expressionSR . + expressionMD
    (12) expressionSR -> expressionSR . - expressionMD

    LT              shift and go to state 23
    GT              shift and go to state 24
    +               shift and go to state 21
    -               shift and go to state 22


state 43

    (15) expressionMD -> expressionMD * expression .

    *               reduce using rule 15 (expressionMD -> expressionMD * expression .)
    /               reduce using rule 15 (expressionMD -> expressionMD * expression .)
    +               reduce using rule 15 (expressionMD -> expressionMD * expression .)
    -               reduce using rule 15 (expressionMD -> expressionMD * expression .)
    LT              reduce using rule 15 (expressionMD -> expressionMD * expression .)
    GT              reduce using rule 15 (expressionMD -> expressionMD * expression .)
    SALTO           reduce using rule 15 (expressionMD -> expressionMD * expression .)
    $end            reduce using rule 15 (expressionMD -> expressionMD * expression .)
    )               reduce using rule 15 (expressionMD -> expressionMD * expression .)
    BOOLEANO        reduce using rule 15 (expressionMD -> expressionMD * expression .)


state 44

    (16) expressionMD -> expressionMD / expression .

    *               reduce using rule 16 (expressionMD -> expressionMD / expression .)
    /               reduce using rule 16 (expressionMD -> expressionMD / expression .)
    +               reduce using rule 16 (expressionMD -> expressionMD / expression .)
    -               reduce using rule 16 (expressionMD -> expressionMD / expression .)
    LT              reduce using rule 16 (expressionMD -> expressionMD / expression .)
    GT              reduce using rule 16 (expressionMD -> expressionMD / expression .)
    SALTO           reduce using rule 16 (expressionMD -> expressionMD / expression .)
    $end            reduce using rule 16 (expressionMD -> expressionMD / expression .)
    )               reduce using rule 16 (expressionMD -> expressionMD / expression .)
    BOOLEANO        reduce using rule 16 (expressionMD -> expressionMD / expression .)


state 45

    (18) expression -> ( expressionSR ) .

    *               reduce using rule 18 (expression -> ( expressionSR ) .)
    /               reduce using rule 18 (expression -> ( expressionSR ) .)
    +               reduce using rule 18 (expression -> ( expressionSR ) .)
    -               reduce using rule 18 (expression -> ( expressionSR ) .)
    LT              reduce using rule 18 (expression -> ( expressionSR ) .)
    GT              reduce using rule 18 (expression -> ( expressionSR ) .)
    SALTO           reduce using rule 18 (expression -> ( expressionSR ) .)
    $end            reduce using rule 18 (expression -> ( expressionSR ) .)
    )               reduce using rule 18 (expression -> ( expressionSR ) .)
    BOOLEANO        reduce using rule 18 (expression -> ( expressionSR ) .)


state 46

    (26) expression -> FCIENT ( expressionSR . )
    (11) expressionSR -> expressionSR . + expressionMD
    (12) expressionSR -> expressionSR . - expressionMD
    (8) expressionLOG -> expressionSR . LT expressionSR
    (9) expressionLOG -> expressionSR . GT expressionSR

    )               shift and go to state 48
    +               shift and go to state 21
    -               shift and go to state 22
    LT              shift and go to state 23
    GT              shift and go to state 24


state 47

    (4) statement -> VARTYPE ID = expressionSR .
    (11) expressionSR -> expressionSR . + expressionMD
    (12) expressionSR -> expressionSR . - expressionMD
    (8) expressionLOG -> expressionSR . LT expressionSR
    (9) expressionLOG -> expressionSR . GT expressionSR

    SALTO           reduce using rule 4 (statement -> VARTYPE ID = expressionSR .)
    $end            reduce using rule 4 (statement -> VARTYPE ID = expressionSR .)
    +               shift and go to state 21
    -               shift and go to state 22
    LT              shift and go to state 23
    GT              shift and go to state 24


state 48

    (26) expression -> FCIENT ( expressionSR ) .

    *               reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    /               reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    +               reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    -               reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    LT              reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    GT              reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    SALTO           reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    $end            reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    )               reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)
    BOOLEANO        reduce using rule 26 (expression -> FCIENT ( expressionSR ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 39 resolved as shift
WARNING: shift/reduce conflict for - in state 39 resolved as shift
WARNING: shift/reduce conflict for LT in state 39 resolved as shift
WARNING: shift/reduce conflict for GT in state 39 resolved as shift
WARNING: shift/reduce conflict for + in state 40 resolved as shift
WARNING: shift/reduce conflict for - in state 40 resolved as shift
WARNING: shift/reduce conflict for LT in state 40 resolved as shift
WARNING: shift/reduce conflict for GT in state 40 resolved as shift
