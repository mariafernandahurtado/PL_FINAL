Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNACION
    SEPARADOR
    SIMBOLO

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> statement SALTO sentencias
Rule 2     sentencias -> statement
Rule 3     statement -> VARTYPE declaration
Rule 4     declaration -> identificador
Rule 5     declaration -> declaration , declaration
Rule 6     identificador -> ID
Rule 7     statement -> VARTYPE ID = expressionSR
Rule 8     statement -> ID = expressionSR
Rule 9     statement -> expressionSR
Rule 10    statement -> expressionLOG BOOLEANO expressionLOG
Rule 11    expressionLOG -> expressionSR LT expressionSR
Rule 12    expressionLOG -> expressionSR GT expressionSR
Rule 13    statement -> <empty>
Rule 14    expressionSR -> expressionSR + expressionMD
Rule 15    expressionSR -> expressionSR - expressionMD
Rule 16    expressionSR -> expressionMD
Rule 17    expressionSR -> expressionLOG
Rule 18    expressionMD -> expressionMD * expression
Rule 19    expressionMD -> expressionMD / expression
Rule 20    expressionMD -> expression
Rule 21    expression -> ( expressionSR )
Rule 22    expression -> - expression
Rule 23    expression -> + expression
Rule 24    expression -> ENTERO
Rule 25    expression -> DECIMAL
Rule 26    expression -> V_BOOLEAN
Rule 27    expression -> NOTCIENT
Rule 28    expression -> OCTAL
Rule 29    expression -> FCIENT ( expressionSR )
Rule 30    expression -> ID

Terminals, with rules where they appear

(                    : 21 29
)                    : 21 29
*                    : 18
+                    : 14 23
,                    : 5
-                    : 15 22
/                    : 19
=                    : 7 8
ASIGNACION           : 
BOOLEANO             : 10
DECIMAL              : 25
ENTERO               : 24
FCIENT               : 29
GT                   : 12
ID                   : 6 7 8 30
LT                   : 11
NOTCIENT             : 27
OCTAL                : 28
SALTO                : 1
SEPARADOR            : 
SIMBOLO              : 
VARTYPE              : 3 7
V_BOOLEAN            : 26
error                : 

Nonterminals, with rules where they appear

declaration          : 3 5 5
expression           : 18 19 20 22 23
expressionLOG        : 10 10 17
expressionMD         : 14 15 16 18 19
expressionSR         : 7 8 9 11 11 12 12 14 15 21 29
identificador        : 4
sentencias           : 1 0
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE declaration
    (7) statement -> . VARTYPE ID = expressionSR
    (8) statement -> . ID = expressionSR
    (9) statement -> . expressionSR
    (10) statement -> . expressionLOG BOOLEANO expressionLOG
    (13) statement -> .
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    VARTYPE         shift and go to state 3
    ID              shift and go to state 4
    SALTO           reduce using rule 13 (statement -> .)
    $end            reduce using rule 13 (statement -> .)
    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17

    sentencias                     shift and go to state 1
    statement                      shift and go to state 2
    expressionSR                   shift and go to state 5
    expressionLOG                  shift and go to state 6
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 10

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> statement . SALTO sentencias
    (2) sentencias -> statement .

    SALTO           shift and go to state 18
    $end            reduce using rule 2 (sentencias -> statement .)


state 3

    (3) statement -> VARTYPE . declaration
    (7) statement -> VARTYPE . ID = expressionSR
    (4) declaration -> . identificador
    (5) declaration -> . declaration , declaration
    (6) identificador -> . ID

    ID              shift and go to state 20

    declaration                    shift and go to state 19
    identificador                  shift and go to state 21

state 4

    (8) statement -> ID . = expressionSR
    (30) expression -> ID .

    =               shift and go to state 22
    *               reduce using rule 30 (expression -> ID .)
    /               reduce using rule 30 (expression -> ID .)
    +               reduce using rule 30 (expression -> ID .)
    -               reduce using rule 30 (expression -> ID .)
    LT              reduce using rule 30 (expression -> ID .)
    GT              reduce using rule 30 (expression -> ID .)
    SALTO           reduce using rule 30 (expression -> ID .)
    $end            reduce using rule 30 (expression -> ID .)


state 5

    (9) statement -> expressionSR .
    (14) expressionSR -> expressionSR . + expressionMD
    (15) expressionSR -> expressionSR . - expressionMD
    (11) expressionLOG -> expressionSR . LT expressionSR
    (12) expressionLOG -> expressionSR . GT expressionSR

    SALTO           reduce using rule 9 (statement -> expressionSR .)
    $end            reduce using rule 9 (statement -> expressionSR .)
    +               shift and go to state 23
    -               shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26


state 6

    (10) statement -> expressionLOG . BOOLEANO expressionLOG
    (17) expressionSR -> expressionLOG .

    BOOLEANO        shift and go to state 27
    +               reduce using rule 17 (expressionSR -> expressionLOG .)
    -               reduce using rule 17 (expressionSR -> expressionLOG .)
    LT              reduce using rule 17 (expressionSR -> expressionLOG .)
    GT              reduce using rule 17 (expressionSR -> expressionLOG .)
    SALTO           reduce using rule 17 (expressionSR -> expressionLOG .)
    $end            reduce using rule 17 (expressionSR -> expressionLOG .)


state 7

    (23) expression -> + . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expression                     shift and go to state 28

state 8

    (16) expressionSR -> expressionMD .
    (18) expressionMD -> expressionMD . * expression
    (19) expressionMD -> expressionMD . / expression

    +               reduce using rule 16 (expressionSR -> expressionMD .)
    -               reduce using rule 16 (expressionSR -> expressionMD .)
    LT              reduce using rule 16 (expressionSR -> expressionMD .)
    GT              reduce using rule 16 (expressionSR -> expressionMD .)
    SALTO           reduce using rule 16 (expressionSR -> expressionMD .)
    $end            reduce using rule 16 (expressionSR -> expressionMD .)
    )               reduce using rule 16 (expressionSR -> expressionMD .)
    BOOLEANO        reduce using rule 16 (expressionSR -> expressionMD .)
    *               shift and go to state 30
    /               shift and go to state 31


state 9

    (22) expression -> - . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expression                     shift and go to state 32

state 10

    (20) expressionMD -> expression .

    *               reduce using rule 20 (expressionMD -> expression .)
    /               reduce using rule 20 (expressionMD -> expression .)
    +               reduce using rule 20 (expressionMD -> expression .)
    -               reduce using rule 20 (expressionMD -> expression .)
    LT              reduce using rule 20 (expressionMD -> expression .)
    GT              reduce using rule 20 (expressionMD -> expression .)
    SALTO           reduce using rule 20 (expressionMD -> expression .)
    $end            reduce using rule 20 (expressionMD -> expression .)
    )               reduce using rule 20 (expressionMD -> expression .)
    BOOLEANO        reduce using rule 20 (expressionMD -> expression .)


state 11

    (21) expression -> ( . expressionSR )
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionSR                   shift and go to state 33
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 34
    expression                     shift and go to state 10

state 12

    (24) expression -> ENTERO .

    *               reduce using rule 24 (expression -> ENTERO .)
    /               reduce using rule 24 (expression -> ENTERO .)
    +               reduce using rule 24 (expression -> ENTERO .)
    -               reduce using rule 24 (expression -> ENTERO .)
    LT              reduce using rule 24 (expression -> ENTERO .)
    GT              reduce using rule 24 (expression -> ENTERO .)
    SALTO           reduce using rule 24 (expression -> ENTERO .)
    $end            reduce using rule 24 (expression -> ENTERO .)
    )               reduce using rule 24 (expression -> ENTERO .)
    BOOLEANO        reduce using rule 24 (expression -> ENTERO .)


state 13

    (25) expression -> DECIMAL .

    *               reduce using rule 25 (expression -> DECIMAL .)
    /               reduce using rule 25 (expression -> DECIMAL .)
    +               reduce using rule 25 (expression -> DECIMAL .)
    -               reduce using rule 25 (expression -> DECIMAL .)
    LT              reduce using rule 25 (expression -> DECIMAL .)
    GT              reduce using rule 25 (expression -> DECIMAL .)
    SALTO           reduce using rule 25 (expression -> DECIMAL .)
    $end            reduce using rule 25 (expression -> DECIMAL .)
    )               reduce using rule 25 (expression -> DECIMAL .)
    BOOLEANO        reduce using rule 25 (expression -> DECIMAL .)


state 14

    (26) expression -> V_BOOLEAN .

    *               reduce using rule 26 (expression -> V_BOOLEAN .)
    /               reduce using rule 26 (expression -> V_BOOLEAN .)
    +               reduce using rule 26 (expression -> V_BOOLEAN .)
    -               reduce using rule 26 (expression -> V_BOOLEAN .)
    LT              reduce using rule 26 (expression -> V_BOOLEAN .)
    GT              reduce using rule 26 (expression -> V_BOOLEAN .)
    SALTO           reduce using rule 26 (expression -> V_BOOLEAN .)
    $end            reduce using rule 26 (expression -> V_BOOLEAN .)
    )               reduce using rule 26 (expression -> V_BOOLEAN .)
    BOOLEANO        reduce using rule 26 (expression -> V_BOOLEAN .)


state 15

    (27) expression -> NOTCIENT .

    *               reduce using rule 27 (expression -> NOTCIENT .)
    /               reduce using rule 27 (expression -> NOTCIENT .)
    +               reduce using rule 27 (expression -> NOTCIENT .)
    -               reduce using rule 27 (expression -> NOTCIENT .)
    LT              reduce using rule 27 (expression -> NOTCIENT .)
    GT              reduce using rule 27 (expression -> NOTCIENT .)
    SALTO           reduce using rule 27 (expression -> NOTCIENT .)
    $end            reduce using rule 27 (expression -> NOTCIENT .)
    )               reduce using rule 27 (expression -> NOTCIENT .)
    BOOLEANO        reduce using rule 27 (expression -> NOTCIENT .)


state 16

    (28) expression -> OCTAL .

    *               reduce using rule 28 (expression -> OCTAL .)
    /               reduce using rule 28 (expression -> OCTAL .)
    +               reduce using rule 28 (expression -> OCTAL .)
    -               reduce using rule 28 (expression -> OCTAL .)
    LT              reduce using rule 28 (expression -> OCTAL .)
    GT              reduce using rule 28 (expression -> OCTAL .)
    SALTO           reduce using rule 28 (expression -> OCTAL .)
    $end            reduce using rule 28 (expression -> OCTAL .)
    )               reduce using rule 28 (expression -> OCTAL .)
    BOOLEANO        reduce using rule 28 (expression -> OCTAL .)


state 17

    (29) expression -> FCIENT . ( expressionSR )

    (               shift and go to state 35


state 18

    (1) sentencias -> statement SALTO . sentencias
    (1) sentencias -> . statement SALTO sentencias
    (2) sentencias -> . statement
    (3) statement -> . VARTYPE declaration
    (7) statement -> . VARTYPE ID = expressionSR
    (8) statement -> . ID = expressionSR
    (9) statement -> . expressionSR
    (10) statement -> . expressionLOG BOOLEANO expressionLOG
    (13) statement -> .
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    VARTYPE         shift and go to state 3
    ID              shift and go to state 4
    SALTO           reduce using rule 13 (statement -> .)
    $end            reduce using rule 13 (statement -> .)
    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17

    statement                      shift and go to state 2
    sentencias                     shift and go to state 36
    expressionSR                   shift and go to state 5
    expressionLOG                  shift and go to state 6
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 10

state 19

    (3) statement -> VARTYPE declaration .
    (5) declaration -> declaration . , declaration

    SALTO           reduce using rule 3 (statement -> VARTYPE declaration .)
    $end            reduce using rule 3 (statement -> VARTYPE declaration .)
    ,               shift and go to state 37


state 20

    (7) statement -> VARTYPE ID . = expressionSR
    (6) identificador -> ID .

    =               shift and go to state 38
    ,               reduce using rule 6 (identificador -> ID .)
    SALTO           reduce using rule 6 (identificador -> ID .)
    $end            reduce using rule 6 (identificador -> ID .)


state 21

    (4) declaration -> identificador .

    ,               reduce using rule 4 (declaration -> identificador .)
    SALTO           reduce using rule 4 (declaration -> identificador .)
    $end            reduce using rule 4 (declaration -> identificador .)


state 22

    (8) statement -> ID = . expressionSR
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionSR                   shift and go to state 39
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 34
    expression                     shift and go to state 10

state 23

    (14) expressionSR -> expressionSR + . expressionMD
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionMD                   shift and go to state 40
    expression                     shift and go to state 10

state 24

    (15) expressionSR -> expressionSR - . expressionMD
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionMD                   shift and go to state 41
    expression                     shift and go to state 10

state 25

    (11) expressionLOG -> expressionSR LT . expressionSR
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionSR                   shift and go to state 42
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 34
    expression                     shift and go to state 10

state 26

    (12) expressionLOG -> expressionSR GT . expressionSR
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionSR                   shift and go to state 43
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 34
    expression                     shift and go to state 10

state 27

    (10) statement -> expressionLOG BOOLEANO . expressionLOG
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionLOG                  shift and go to state 44
    expressionSR                   shift and go to state 45
    expressionMD                   shift and go to state 8
    expression                     shift and go to state 10

state 28

    (23) expression -> + expression .

    *               reduce using rule 23 (expression -> + expression .)
    /               reduce using rule 23 (expression -> + expression .)
    +               reduce using rule 23 (expression -> + expression .)
    -               reduce using rule 23 (expression -> + expression .)
    LT              reduce using rule 23 (expression -> + expression .)
    GT              reduce using rule 23 (expression -> + expression .)
    SALTO           reduce using rule 23 (expression -> + expression .)
    $end            reduce using rule 23 (expression -> + expression .)
    )               reduce using rule 23 (expression -> + expression .)
    BOOLEANO        reduce using rule 23 (expression -> + expression .)


state 29

    (30) expression -> ID .

    *               reduce using rule 30 (expression -> ID .)
    /               reduce using rule 30 (expression -> ID .)
    +               reduce using rule 30 (expression -> ID .)
    -               reduce using rule 30 (expression -> ID .)
    LT              reduce using rule 30 (expression -> ID .)
    GT              reduce using rule 30 (expression -> ID .)
    SALTO           reduce using rule 30 (expression -> ID .)
    $end            reduce using rule 30 (expression -> ID .)
    )               reduce using rule 30 (expression -> ID .)
    BOOLEANO        reduce using rule 30 (expression -> ID .)


state 30

    (18) expressionMD -> expressionMD * . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expression                     shift and go to state 46

state 31

    (19) expressionMD -> expressionMD / . expression
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expression                     shift and go to state 47

state 32

    (22) expression -> - expression .

    *               reduce using rule 22 (expression -> - expression .)
    /               reduce using rule 22 (expression -> - expression .)
    +               reduce using rule 22 (expression -> - expression .)
    -               reduce using rule 22 (expression -> - expression .)
    LT              reduce using rule 22 (expression -> - expression .)
    GT              reduce using rule 22 (expression -> - expression .)
    SALTO           reduce using rule 22 (expression -> - expression .)
    $end            reduce using rule 22 (expression -> - expression .)
    )               reduce using rule 22 (expression -> - expression .)
    BOOLEANO        reduce using rule 22 (expression -> - expression .)


state 33

    (21) expression -> ( expressionSR . )
    (14) expressionSR -> expressionSR . + expressionMD
    (15) expressionSR -> expressionSR . - expressionMD
    (11) expressionLOG -> expressionSR . LT expressionSR
    (12) expressionLOG -> expressionSR . GT expressionSR

    )               shift and go to state 48
    +               shift and go to state 23
    -               shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26


state 34

    (17) expressionSR -> expressionLOG .

    )               reduce using rule 17 (expressionSR -> expressionLOG .)
    +               reduce using rule 17 (expressionSR -> expressionLOG .)
    -               reduce using rule 17 (expressionSR -> expressionLOG .)
    LT              reduce using rule 17 (expressionSR -> expressionLOG .)
    GT              reduce using rule 17 (expressionSR -> expressionLOG .)
    SALTO           reduce using rule 17 (expressionSR -> expressionLOG .)
    $end            reduce using rule 17 (expressionSR -> expressionLOG .)
    BOOLEANO        reduce using rule 17 (expressionSR -> expressionLOG .)


state 35

    (29) expression -> FCIENT ( . expressionSR )
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionSR                   shift and go to state 49
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 34
    expression                     shift and go to state 10

state 36

    (1) sentencias -> statement SALTO sentencias .

    $end            reduce using rule 1 (sentencias -> statement SALTO sentencias .)


state 37

    (5) declaration -> declaration , . declaration
    (4) declaration -> . identificador
    (5) declaration -> . declaration , declaration
    (6) identificador -> . ID

    ID              shift and go to state 51

    declaration                    shift and go to state 50
    identificador                  shift and go to state 21

state 38

    (7) statement -> VARTYPE ID = . expressionSR
    (14) expressionSR -> . expressionSR + expressionMD
    (15) expressionSR -> . expressionSR - expressionMD
    (16) expressionSR -> . expressionMD
    (17) expressionSR -> . expressionLOG
    (18) expressionMD -> . expressionMD * expression
    (19) expressionMD -> . expressionMD / expression
    (20) expressionMD -> . expression
    (11) expressionLOG -> . expressionSR LT expressionSR
    (12) expressionLOG -> . expressionSR GT expressionSR
    (21) expression -> . ( expressionSR )
    (22) expression -> . - expression
    (23) expression -> . + expression
    (24) expression -> . ENTERO
    (25) expression -> . DECIMAL
    (26) expression -> . V_BOOLEAN
    (27) expression -> . NOTCIENT
    (28) expression -> . OCTAL
    (29) expression -> . FCIENT ( expressionSR )
    (30) expression -> . ID

    (               shift and go to state 11
    -               shift and go to state 9
    +               shift and go to state 7
    ENTERO          shift and go to state 12
    DECIMAL         shift and go to state 13
    V_BOOLEAN       shift and go to state 14
    NOTCIENT        shift and go to state 15
    OCTAL           shift and go to state 16
    FCIENT          shift and go to state 17
    ID              shift and go to state 29

    expressionSR                   shift and go to state 52
    expressionMD                   shift and go to state 8
    expressionLOG                  shift and go to state 34
    expression                     shift and go to state 10

state 39

    (8) statement -> ID = expressionSR .
    (14) expressionSR -> expressionSR . + expressionMD
    (15) expressionSR -> expressionSR . - expressionMD
    (11) expressionLOG -> expressionSR . LT expressionSR
    (12) expressionLOG -> expressionSR . GT expressionSR

    SALTO           reduce using rule 8 (statement -> ID = expressionSR .)
    $end            reduce using rule 8 (statement -> ID = expressionSR .)
    +               shift and go to state 23
    -               shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26


state 40

    (14) expressionSR -> expressionSR + expressionMD .
    (18) expressionMD -> expressionMD . * expression
    (19) expressionMD -> expressionMD . / expression

    +               reduce using rule 14 (expressionSR -> expressionSR + expressionMD .)
    -               reduce using rule 14 (expressionSR -> expressionSR + expressionMD .)
    LT              reduce using rule 14 (expressionSR -> expressionSR + expressionMD .)
    GT              reduce using rule 14 (expressionSR -> expressionSR + expressionMD .)
    SALTO           reduce using rule 14 (expressionSR -> expressionSR + expressionMD .)
    $end            reduce using rule 14 (expressionSR -> expressionSR + expressionMD .)
    )               reduce using rule 14 (expressionSR -> expressionSR + expressionMD .)
    BOOLEANO        reduce using rule 14 (expressionSR -> expressionSR + expressionMD .)
    *               shift and go to state 30
    /               shift and go to state 31


state 41

    (15) expressionSR -> expressionSR - expressionMD .
    (18) expressionMD -> expressionMD . * expression
    (19) expressionMD -> expressionMD . / expression

    +               reduce using rule 15 (expressionSR -> expressionSR - expressionMD .)
    -               reduce using rule 15 (expressionSR -> expressionSR - expressionMD .)
    LT              reduce using rule 15 (expressionSR -> expressionSR - expressionMD .)
    GT              reduce using rule 15 (expressionSR -> expressionSR - expressionMD .)
    SALTO           reduce using rule 15 (expressionSR -> expressionSR - expressionMD .)
    $end            reduce using rule 15 (expressionSR -> expressionSR - expressionMD .)
    )               reduce using rule 15 (expressionSR -> expressionSR - expressionMD .)
    BOOLEANO        reduce using rule 15 (expressionSR -> expressionSR - expressionMD .)
    *               shift and go to state 30
    /               shift and go to state 31


state 42

    (11) expressionLOG -> expressionSR LT expressionSR .
    (14) expressionSR -> expressionSR . + expressionMD
    (15) expressionSR -> expressionSR . - expressionMD
    (11) expressionLOG -> expressionSR . LT expressionSR
    (12) expressionLOG -> expressionSR . GT expressionSR

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    BOOLEANO        reduce using rule 11 (expressionLOG -> expressionSR LT expressionSR .)
    SALTO           reduce using rule 11 (expressionLOG -> expressionSR LT expressionSR .)
    $end            reduce using rule 11 (expressionLOG -> expressionSR LT expressionSR .)
    )               reduce using rule 11 (expressionLOG -> expressionSR LT expressionSR .)
    +               shift and go to state 23
    -               shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26

  ! +               [ reduce using rule 11 (expressionLOG -> expressionSR LT expressionSR .) ]
  ! -               [ reduce using rule 11 (expressionLOG -> expressionSR LT expressionSR .) ]
  ! LT              [ reduce using rule 11 (expressionLOG -> expressionSR LT expressionSR .) ]
  ! GT              [ reduce using rule 11 (expressionLOG -> expressionSR LT expressionSR .) ]


state 43

    (12) expressionLOG -> expressionSR GT expressionSR .
    (14) expressionSR -> expressionSR . + expressionMD
    (15) expressionSR -> expressionSR . - expressionMD
    (11) expressionLOG -> expressionSR . LT expressionSR
    (12) expressionLOG -> expressionSR . GT expressionSR

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
    BOOLEANO        reduce using rule 12 (expressionLOG -> expressionSR GT expressionSR .)
    SALTO           reduce using rule 12 (expressionLOG -> expressionSR GT expressionSR .)
    $end            reduce using rule 12 (expressionLOG -> expressionSR GT expressionSR .)
    )               reduce using rule 12 (expressionLOG -> expressionSR GT expressionSR .)
    +               shift and go to state 23
    -               shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26

  ! +               [ reduce using rule 12 (expressionLOG -> expressionSR GT expressionSR .) ]
  ! -               [ reduce using rule 12 (expressionLOG -> expressionSR GT expressionSR .) ]
  ! LT              [ reduce using rule 12 (expressionLOG -> expressionSR GT expressionSR .) ]
  ! GT              [ reduce using rule 12 (expressionLOG -> expressionSR GT expressionSR .) ]


state 44

    (10) statement -> expressionLOG BOOLEANO expressionLOG .
    (17) expressionSR -> expressionLOG .

    SALTO           reduce using rule 10 (statement -> expressionLOG BOOLEANO expressionLOG .)
    $end            reduce using rule 10 (statement -> expressionLOG BOOLEANO expressionLOG .)
    LT              reduce using rule 17 (expressionSR -> expressionLOG .)
    GT              reduce using rule 17 (expressionSR -> expressionLOG .)
    +               reduce using rule 17 (expressionSR -> expressionLOG .)
    -               reduce using rule 17 (expressionSR -> expressionLOG .)


state 45

    (11) expressionLOG -> expressionSR . LT expressionSR
    (12) expressionLOG -> expressionSR . GT expressionSR
    (14) expressionSR -> expressionSR . + expressionMD
    (15) expressionSR -> expressionSR . - expressionMD

    LT              shift and go to state 25
    GT              shift and go to state 26
    +               shift and go to state 23
    -               shift and go to state 24


state 46

    (18) expressionMD -> expressionMD * expression .

    *               reduce using rule 18 (expressionMD -> expressionMD * expression .)
    /               reduce using rule 18 (expressionMD -> expressionMD * expression .)
    +               reduce using rule 18 (expressionMD -> expressionMD * expression .)
    -               reduce using rule 18 (expressionMD -> expressionMD * expression .)
    LT              reduce using rule 18 (expressionMD -> expressionMD * expression .)
    GT              reduce using rule 18 (expressionMD -> expressionMD * expression .)
    SALTO           reduce using rule 18 (expressionMD -> expressionMD * expression .)
    $end            reduce using rule 18 (expressionMD -> expressionMD * expression .)
    )               reduce using rule 18 (expressionMD -> expressionMD * expression .)
    BOOLEANO        reduce using rule 18 (expressionMD -> expressionMD * expression .)


state 47

    (19) expressionMD -> expressionMD / expression .

    *               reduce using rule 19 (expressionMD -> expressionMD / expression .)
    /               reduce using rule 19 (expressionMD -> expressionMD / expression .)
    +               reduce using rule 19 (expressionMD -> expressionMD / expression .)
    -               reduce using rule 19 (expressionMD -> expressionMD / expression .)
    LT              reduce using rule 19 (expressionMD -> expressionMD / expression .)
    GT              reduce using rule 19 (expressionMD -> expressionMD / expression .)
    SALTO           reduce using rule 19 (expressionMD -> expressionMD / expression .)
    $end            reduce using rule 19 (expressionMD -> expressionMD / expression .)
    )               reduce using rule 19 (expressionMD -> expressionMD / expression .)
    BOOLEANO        reduce using rule 19 (expressionMD -> expressionMD / expression .)


state 48

    (21) expression -> ( expressionSR ) .

    *               reduce using rule 21 (expression -> ( expressionSR ) .)
    /               reduce using rule 21 (expression -> ( expressionSR ) .)
    +               reduce using rule 21 (expression -> ( expressionSR ) .)
    -               reduce using rule 21 (expression -> ( expressionSR ) .)
    LT              reduce using rule 21 (expression -> ( expressionSR ) .)
    GT              reduce using rule 21 (expression -> ( expressionSR ) .)
    SALTO           reduce using rule 21 (expression -> ( expressionSR ) .)
    $end            reduce using rule 21 (expression -> ( expressionSR ) .)
    )               reduce using rule 21 (expression -> ( expressionSR ) .)
    BOOLEANO        reduce using rule 21 (expression -> ( expressionSR ) .)


state 49

    (29) expression -> FCIENT ( expressionSR . )
    (14) expressionSR -> expressionSR . + expressionMD
    (15) expressionSR -> expressionSR . - expressionMD
    (11) expressionLOG -> expressionSR . LT expressionSR
    (12) expressionLOG -> expressionSR . GT expressionSR

    )               shift and go to state 53
    +               shift and go to state 23
    -               shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26


state 50

    (5) declaration -> declaration , declaration .
    (5) declaration -> declaration . , declaration

  ! shift/reduce conflict for , resolved as shift
    SALTO           reduce using rule 5 (declaration -> declaration , declaration .)
    $end            reduce using rule 5 (declaration -> declaration , declaration .)
    ,               shift and go to state 37

  ! ,               [ reduce using rule 5 (declaration -> declaration , declaration .) ]


state 51

    (6) identificador -> ID .

    ,               reduce using rule 6 (identificador -> ID .)
    SALTO           reduce using rule 6 (identificador -> ID .)
    $end            reduce using rule 6 (identificador -> ID .)


state 52

    (7) statement -> VARTYPE ID = expressionSR .
    (14) expressionSR -> expressionSR . + expressionMD
    (15) expressionSR -> expressionSR . - expressionMD
    (11) expressionLOG -> expressionSR . LT expressionSR
    (12) expressionLOG -> expressionSR . GT expressionSR

    SALTO           reduce using rule 7 (statement -> VARTYPE ID = expressionSR .)
    $end            reduce using rule 7 (statement -> VARTYPE ID = expressionSR .)
    +               shift and go to state 23
    -               shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26


state 53

    (29) expression -> FCIENT ( expressionSR ) .

    *               reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    /               reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    +               reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    -               reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    LT              reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    GT              reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    SALTO           reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    $end            reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    )               reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)
    BOOLEANO        reduce using rule 29 (expression -> FCIENT ( expressionSR ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 42 resolved as shift
WARNING: shift/reduce conflict for - in state 42 resolved as shift
WARNING: shift/reduce conflict for LT in state 42 resolved as shift
WARNING: shift/reduce conflict for GT in state 42 resolved as shift
WARNING: shift/reduce conflict for + in state 43 resolved as shift
WARNING: shift/reduce conflict for - in state 43 resolved as shift
WARNING: shift/reduce conflict for LT in state 43 resolved as shift
WARNING: shift/reduce conflict for GT in state 43 resolved as shift
WARNING: shift/reduce conflict for , in state 50 resolved as shift
